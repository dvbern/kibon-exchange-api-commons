/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package ch.dvbern.kibon.exchange.commons.institution;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class AdresseDTO extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2160690057223982796L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AdresseDTO\",\"namespace\":\"ch.dvbern.kibon.exchange.commons.institution\",\"fields\":[{\"name\":\"strasse\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"hausnummer\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"adresszusatz\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"plz\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"ort\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"land\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<AdresseDTO> ENCODER =
      new BinaryMessageEncoder<AdresseDTO>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AdresseDTO> DECODER =
      new BinaryMessageDecoder<AdresseDTO>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<AdresseDTO> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<AdresseDTO> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<AdresseDTO> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<AdresseDTO>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this AdresseDTO to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a AdresseDTO from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a AdresseDTO instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static AdresseDTO fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.String strasse;
   private java.lang.String hausnummer;
   private java.lang.String adresszusatz;
   private java.lang.String plz;
   private java.lang.String ort;
   private java.lang.String land;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AdresseDTO() {}

  /**
   * All-args constructor.
   * @param strasse The new value for strasse
   * @param hausnummer The new value for hausnummer
   * @param adresszusatz The new value for adresszusatz
   * @param plz The new value for plz
   * @param ort The new value for ort
   * @param land The new value for land
   */
  public AdresseDTO(java.lang.String strasse, java.lang.String hausnummer, java.lang.String adresszusatz, java.lang.String plz, java.lang.String ort, java.lang.String land) {
    this.strasse = strasse;
    this.hausnummer = hausnummer;
    this.adresszusatz = adresszusatz;
    this.plz = plz;
    this.ort = ort;
    this.land = land;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return strasse;
    case 1: return hausnummer;
    case 2: return adresszusatz;
    case 3: return plz;
    case 4: return ort;
    case 5: return land;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: strasse = (java.lang.String)value$; break;
    case 1: hausnummer = (java.lang.String)value$; break;
    case 2: adresszusatz = (java.lang.String)value$; break;
    case 3: plz = (java.lang.String)value$; break;
    case 4: ort = (java.lang.String)value$; break;
    case 5: land = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'strasse' field.
   * @return The value of the 'strasse' field.
   */
  public java.lang.String getStrasse() {
    return strasse;
  }


  /**
   * Sets the value of the 'strasse' field.
   * @param value the value to set.
   */
  public void setStrasse(java.lang.String value) {
    this.strasse = value;
  }

  /**
   * Gets the value of the 'hausnummer' field.
   * @return The value of the 'hausnummer' field.
   */
  public java.lang.String getHausnummer() {
    return hausnummer;
  }


  /**
   * Sets the value of the 'hausnummer' field.
   * @param value the value to set.
   */
  public void setHausnummer(java.lang.String value) {
    this.hausnummer = value;
  }

  /**
   * Gets the value of the 'adresszusatz' field.
   * @return The value of the 'adresszusatz' field.
   */
  public java.lang.String getAdresszusatz() {
    return adresszusatz;
  }


  /**
   * Sets the value of the 'adresszusatz' field.
   * @param value the value to set.
   */
  public void setAdresszusatz(java.lang.String value) {
    this.adresszusatz = value;
  }

  /**
   * Gets the value of the 'plz' field.
   * @return The value of the 'plz' field.
   */
  public java.lang.String getPlz() {
    return plz;
  }


  /**
   * Sets the value of the 'plz' field.
   * @param value the value to set.
   */
  public void setPlz(java.lang.String value) {
    this.plz = value;
  }

  /**
   * Gets the value of the 'ort' field.
   * @return The value of the 'ort' field.
   */
  public java.lang.String getOrt() {
    return ort;
  }


  /**
   * Sets the value of the 'ort' field.
   * @param value the value to set.
   */
  public void setOrt(java.lang.String value) {
    this.ort = value;
  }

  /**
   * Gets the value of the 'land' field.
   * @return The value of the 'land' field.
   */
  public java.lang.String getLand() {
    return land;
  }


  /**
   * Sets the value of the 'land' field.
   * @param value the value to set.
   */
  public void setLand(java.lang.String value) {
    this.land = value;
  }

  /**
   * Creates a new AdresseDTO RecordBuilder.
   * @return A new AdresseDTO RecordBuilder
   */
  public static ch.dvbern.kibon.exchange.commons.institution.AdresseDTO.Builder newBuilder() {
    return new ch.dvbern.kibon.exchange.commons.institution.AdresseDTO.Builder();
  }

  /**
   * Creates a new AdresseDTO RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AdresseDTO RecordBuilder
   */
  public static ch.dvbern.kibon.exchange.commons.institution.AdresseDTO.Builder newBuilder(ch.dvbern.kibon.exchange.commons.institution.AdresseDTO.Builder other) {
    if (other == null) {
      return new ch.dvbern.kibon.exchange.commons.institution.AdresseDTO.Builder();
    } else {
      return new ch.dvbern.kibon.exchange.commons.institution.AdresseDTO.Builder(other);
    }
  }

  /**
   * Creates a new AdresseDTO RecordBuilder by copying an existing AdresseDTO instance.
   * @param other The existing instance to copy.
   * @return A new AdresseDTO RecordBuilder
   */
  public static ch.dvbern.kibon.exchange.commons.institution.AdresseDTO.Builder newBuilder(ch.dvbern.kibon.exchange.commons.institution.AdresseDTO other) {
    if (other == null) {
      return new ch.dvbern.kibon.exchange.commons.institution.AdresseDTO.Builder();
    } else {
      return new ch.dvbern.kibon.exchange.commons.institution.AdresseDTO.Builder(other);
    }
  }

  /**
   * RecordBuilder for AdresseDTO instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AdresseDTO>
    implements org.apache.avro.data.RecordBuilder<AdresseDTO> {

    private java.lang.String strasse;
    private java.lang.String hausnummer;
    private java.lang.String adresszusatz;
    private java.lang.String plz;
    private java.lang.String ort;
    private java.lang.String land;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(ch.dvbern.kibon.exchange.commons.institution.AdresseDTO.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.strasse)) {
        this.strasse = data().deepCopy(fields()[0].schema(), other.strasse);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.hausnummer)) {
        this.hausnummer = data().deepCopy(fields()[1].schema(), other.hausnummer);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.adresszusatz)) {
        this.adresszusatz = data().deepCopy(fields()[2].schema(), other.adresszusatz);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.plz)) {
        this.plz = data().deepCopy(fields()[3].schema(), other.plz);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.ort)) {
        this.ort = data().deepCopy(fields()[4].schema(), other.ort);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.land)) {
        this.land = data().deepCopy(fields()[5].schema(), other.land);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
    }

    /**
     * Creates a Builder by copying an existing AdresseDTO instance
     * @param other The existing instance to copy.
     */
    private Builder(ch.dvbern.kibon.exchange.commons.institution.AdresseDTO other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.strasse)) {
        this.strasse = data().deepCopy(fields()[0].schema(), other.strasse);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.hausnummer)) {
        this.hausnummer = data().deepCopy(fields()[1].schema(), other.hausnummer);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.adresszusatz)) {
        this.adresszusatz = data().deepCopy(fields()[2].schema(), other.adresszusatz);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.plz)) {
        this.plz = data().deepCopy(fields()[3].schema(), other.plz);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.ort)) {
        this.ort = data().deepCopy(fields()[4].schema(), other.ort);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.land)) {
        this.land = data().deepCopy(fields()[5].schema(), other.land);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'strasse' field.
      * @return The value.
      */
    public java.lang.String getStrasse() {
      return strasse;
    }


    /**
      * Sets the value of the 'strasse' field.
      * @param value The value of 'strasse'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.institution.AdresseDTO.Builder setStrasse(java.lang.String value) {
      validate(fields()[0], value);
      this.strasse = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'strasse' field has been set.
      * @return True if the 'strasse' field has been set, false otherwise.
      */
    public boolean hasStrasse() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'strasse' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.institution.AdresseDTO.Builder clearStrasse() {
      strasse = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'hausnummer' field.
      * @return The value.
      */
    public java.lang.String getHausnummer() {
      return hausnummer;
    }


    /**
      * Sets the value of the 'hausnummer' field.
      * @param value The value of 'hausnummer'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.institution.AdresseDTO.Builder setHausnummer(java.lang.String value) {
      validate(fields()[1], value);
      this.hausnummer = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'hausnummer' field has been set.
      * @return True if the 'hausnummer' field has been set, false otherwise.
      */
    public boolean hasHausnummer() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'hausnummer' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.institution.AdresseDTO.Builder clearHausnummer() {
      hausnummer = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'adresszusatz' field.
      * @return The value.
      */
    public java.lang.String getAdresszusatz() {
      return adresszusatz;
    }


    /**
      * Sets the value of the 'adresszusatz' field.
      * @param value The value of 'adresszusatz'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.institution.AdresseDTO.Builder setAdresszusatz(java.lang.String value) {
      validate(fields()[2], value);
      this.adresszusatz = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'adresszusatz' field has been set.
      * @return True if the 'adresszusatz' field has been set, false otherwise.
      */
    public boolean hasAdresszusatz() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'adresszusatz' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.institution.AdresseDTO.Builder clearAdresszusatz() {
      adresszusatz = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'plz' field.
      * @return The value.
      */
    public java.lang.String getPlz() {
      return plz;
    }


    /**
      * Sets the value of the 'plz' field.
      * @param value The value of 'plz'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.institution.AdresseDTO.Builder setPlz(java.lang.String value) {
      validate(fields()[3], value);
      this.plz = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'plz' field has been set.
      * @return True if the 'plz' field has been set, false otherwise.
      */
    public boolean hasPlz() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'plz' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.institution.AdresseDTO.Builder clearPlz() {
      plz = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'ort' field.
      * @return The value.
      */
    public java.lang.String getOrt() {
      return ort;
    }


    /**
      * Sets the value of the 'ort' field.
      * @param value The value of 'ort'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.institution.AdresseDTO.Builder setOrt(java.lang.String value) {
      validate(fields()[4], value);
      this.ort = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'ort' field has been set.
      * @return True if the 'ort' field has been set, false otherwise.
      */
    public boolean hasOrt() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'ort' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.institution.AdresseDTO.Builder clearOrt() {
      ort = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'land' field.
      * @return The value.
      */
    public java.lang.String getLand() {
      return land;
    }


    /**
      * Sets the value of the 'land' field.
      * @param value The value of 'land'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.institution.AdresseDTO.Builder setLand(java.lang.String value) {
      validate(fields()[5], value);
      this.land = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'land' field has been set.
      * @return True if the 'land' field has been set, false otherwise.
      */
    public boolean hasLand() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'land' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.institution.AdresseDTO.Builder clearLand() {
      land = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AdresseDTO build() {
      try {
        AdresseDTO record = new AdresseDTO();
        record.strasse = fieldSetFlags()[0] ? this.strasse : (java.lang.String) defaultValue(fields()[0]);
        record.hausnummer = fieldSetFlags()[1] ? this.hausnummer : (java.lang.String) defaultValue(fields()[1]);
        record.adresszusatz = fieldSetFlags()[2] ? this.adresszusatz : (java.lang.String) defaultValue(fields()[2]);
        record.plz = fieldSetFlags()[3] ? this.plz : (java.lang.String) defaultValue(fields()[3]);
        record.ort = fieldSetFlags()[4] ? this.ort : (java.lang.String) defaultValue(fields()[4]);
        record.land = fieldSetFlags()[5] ? this.land : (java.lang.String) defaultValue(fields()[5]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AdresseDTO>
    WRITER$ = (org.apache.avro.io.DatumWriter<AdresseDTO>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AdresseDTO>
    READER$ = (org.apache.avro.io.DatumReader<AdresseDTO>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.strasse);

    if (this.hausnummer == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.hausnummer);
    }

    if (this.adresszusatz == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.adresszusatz);
    }

    out.writeString(this.plz);

    out.writeString(this.ort);

    out.writeString(this.land);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.strasse = in.readString();

      if (in.readIndex() != 1) {
        in.readNull();
        this.hausnummer = null;
      } else {
        this.hausnummer = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.adresszusatz = null;
      } else {
        this.adresszusatz = in.readString();
      }

      this.plz = in.readString();

      this.ort = in.readString();

      this.land = in.readString();

    } else {
      for (int i = 0; i < 6; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.strasse = in.readString();
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.hausnummer = null;
          } else {
            this.hausnummer = in.readString();
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.adresszusatz = null;
          } else {
            this.adresszusatz = in.readString();
          }
          break;

        case 3:
          this.plz = in.readString();
          break;

        case 4:
          this.ort = in.readString();
          break;

        case 5:
          this.land = in.readString();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










