/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package ch.dvbern.kibon.exchange.commons.tagesschulen;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class TarifDTO extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 350776613315590732L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TarifDTO\",\"namespace\":\"ch.dvbern.kibon.exchange.commons.tagesschulen\",\"fields\":[{\"name\":\"von\",\"type\":{\"type\":\"int\",\"logicalType\":\"date\"}},{\"name\":\"bis\",\"type\":{\"type\":\"int\",\"logicalType\":\"date\"}},{\"name\":\"betreuungsMinutenPerWeek\",\"type\":\"int\"},{\"name\":\"betreuungsKostenPerHour\",\"type\":{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":19,\"scale\":2}},{\"name\":\"verpflegungsKostenPerWeek\",\"type\":{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":19,\"scale\":2}},{\"name\":\"verpflegungsKostenVerguenstigung\",\"type\":{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":19,\"scale\":2}},{\"name\":\"totalCostsPerWeek\",\"type\":{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":19,\"scale\":2}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();
static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.DateConversion());
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.DecimalConversion());
  }

  private static final BinaryMessageEncoder<TarifDTO> ENCODER =
      new BinaryMessageEncoder<TarifDTO>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<TarifDTO> DECODER =
      new BinaryMessageDecoder<TarifDTO>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<TarifDTO> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<TarifDTO> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<TarifDTO> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<TarifDTO>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this TarifDTO to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a TarifDTO from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a TarifDTO instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static TarifDTO fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.time.LocalDate von;
   private java.time.LocalDate bis;
   private int betreuungsMinutenPerWeek;
   private java.math.BigDecimal betreuungsKostenPerHour;
   private java.math.BigDecimal verpflegungsKostenPerWeek;
   private java.math.BigDecimal verpflegungsKostenVerguenstigung;
   private java.math.BigDecimal totalCostsPerWeek;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public TarifDTO() {}

  /**
   * All-args constructor.
   * @param von The new value for von
   * @param bis The new value for bis
   * @param betreuungsMinutenPerWeek The new value for betreuungsMinutenPerWeek
   * @param betreuungsKostenPerHour The new value for betreuungsKostenPerHour
   * @param verpflegungsKostenPerWeek The new value for verpflegungsKostenPerWeek
   * @param verpflegungsKostenVerguenstigung The new value for verpflegungsKostenVerguenstigung
   * @param totalCostsPerWeek The new value for totalCostsPerWeek
   */
  public TarifDTO(java.time.LocalDate von, java.time.LocalDate bis, java.lang.Integer betreuungsMinutenPerWeek, java.math.BigDecimal betreuungsKostenPerHour, java.math.BigDecimal verpflegungsKostenPerWeek, java.math.BigDecimal verpflegungsKostenVerguenstigung, java.math.BigDecimal totalCostsPerWeek) {
    this.von = von;
    this.bis = bis;
    this.betreuungsMinutenPerWeek = betreuungsMinutenPerWeek;
    this.betreuungsKostenPerHour = betreuungsKostenPerHour;
    this.verpflegungsKostenPerWeek = verpflegungsKostenPerWeek;
    this.verpflegungsKostenVerguenstigung = verpflegungsKostenVerguenstigung;
    this.totalCostsPerWeek = totalCostsPerWeek;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return von;
    case 1: return bis;
    case 2: return betreuungsMinutenPerWeek;
    case 3: return betreuungsKostenPerHour;
    case 4: return verpflegungsKostenPerWeek;
    case 5: return verpflegungsKostenVerguenstigung;
    case 6: return totalCostsPerWeek;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      new org.apache.avro.data.TimeConversions.DateConversion(),
      new org.apache.avro.data.TimeConversions.DateConversion(),
      null,
      new org.apache.avro.Conversions.DecimalConversion(),
      new org.apache.avro.Conversions.DecimalConversion(),
      new org.apache.avro.Conversions.DecimalConversion(),
      new org.apache.avro.Conversions.DecimalConversion(),
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: von = (java.time.LocalDate)value$; break;
    case 1: bis = (java.time.LocalDate)value$; break;
    case 2: betreuungsMinutenPerWeek = (java.lang.Integer)value$; break;
    case 3: betreuungsKostenPerHour = (java.math.BigDecimal)value$; break;
    case 4: verpflegungsKostenPerWeek = (java.math.BigDecimal)value$; break;
    case 5: verpflegungsKostenVerguenstigung = (java.math.BigDecimal)value$; break;
    case 6: totalCostsPerWeek = (java.math.BigDecimal)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'von' field.
   * @return The value of the 'von' field.
   */
  public java.time.LocalDate getVon() {
    return von;
  }


  /**
   * Sets the value of the 'von' field.
   * @param value the value to set.
   */
  public void setVon(java.time.LocalDate value) {
    this.von = value;
  }

  /**
   * Gets the value of the 'bis' field.
   * @return The value of the 'bis' field.
   */
  public java.time.LocalDate getBis() {
    return bis;
  }


  /**
   * Sets the value of the 'bis' field.
   * @param value the value to set.
   */
  public void setBis(java.time.LocalDate value) {
    this.bis = value;
  }

  /**
   * Gets the value of the 'betreuungsMinutenPerWeek' field.
   * @return The value of the 'betreuungsMinutenPerWeek' field.
   */
  public int getBetreuungsMinutenPerWeek() {
    return betreuungsMinutenPerWeek;
  }


  /**
   * Sets the value of the 'betreuungsMinutenPerWeek' field.
   * @param value the value to set.
   */
  public void setBetreuungsMinutenPerWeek(int value) {
    this.betreuungsMinutenPerWeek = value;
  }

  /**
   * Gets the value of the 'betreuungsKostenPerHour' field.
   * @return The value of the 'betreuungsKostenPerHour' field.
   */
  public java.math.BigDecimal getBetreuungsKostenPerHour() {
    return betreuungsKostenPerHour;
  }


  /**
   * Sets the value of the 'betreuungsKostenPerHour' field.
   * @param value the value to set.
   */
  public void setBetreuungsKostenPerHour(java.math.BigDecimal value) {
    this.betreuungsKostenPerHour = value;
  }

  /**
   * Gets the value of the 'verpflegungsKostenPerWeek' field.
   * @return The value of the 'verpflegungsKostenPerWeek' field.
   */
  public java.math.BigDecimal getVerpflegungsKostenPerWeek() {
    return verpflegungsKostenPerWeek;
  }


  /**
   * Sets the value of the 'verpflegungsKostenPerWeek' field.
   * @param value the value to set.
   */
  public void setVerpflegungsKostenPerWeek(java.math.BigDecimal value) {
    this.verpflegungsKostenPerWeek = value;
  }

  /**
   * Gets the value of the 'verpflegungsKostenVerguenstigung' field.
   * @return The value of the 'verpflegungsKostenVerguenstigung' field.
   */
  public java.math.BigDecimal getVerpflegungsKostenVerguenstigung() {
    return verpflegungsKostenVerguenstigung;
  }


  /**
   * Sets the value of the 'verpflegungsKostenVerguenstigung' field.
   * @param value the value to set.
   */
  public void setVerpflegungsKostenVerguenstigung(java.math.BigDecimal value) {
    this.verpflegungsKostenVerguenstigung = value;
  }

  /**
   * Gets the value of the 'totalCostsPerWeek' field.
   * @return The value of the 'totalCostsPerWeek' field.
   */
  public java.math.BigDecimal getTotalCostsPerWeek() {
    return totalCostsPerWeek;
  }


  /**
   * Sets the value of the 'totalCostsPerWeek' field.
   * @param value the value to set.
   */
  public void setTotalCostsPerWeek(java.math.BigDecimal value) {
    this.totalCostsPerWeek = value;
  }

  /**
   * Creates a new TarifDTO RecordBuilder.
   * @return A new TarifDTO RecordBuilder
   */
  public static ch.dvbern.kibon.exchange.commons.tagesschulen.TarifDTO.Builder newBuilder() {
    return new ch.dvbern.kibon.exchange.commons.tagesschulen.TarifDTO.Builder();
  }

  /**
   * Creates a new TarifDTO RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new TarifDTO RecordBuilder
   */
  public static ch.dvbern.kibon.exchange.commons.tagesschulen.TarifDTO.Builder newBuilder(ch.dvbern.kibon.exchange.commons.tagesschulen.TarifDTO.Builder other) {
    if (other == null) {
      return new ch.dvbern.kibon.exchange.commons.tagesschulen.TarifDTO.Builder();
    } else {
      return new ch.dvbern.kibon.exchange.commons.tagesschulen.TarifDTO.Builder(other);
    }
  }

  /**
   * Creates a new TarifDTO RecordBuilder by copying an existing TarifDTO instance.
   * @param other The existing instance to copy.
   * @return A new TarifDTO RecordBuilder
   */
  public static ch.dvbern.kibon.exchange.commons.tagesschulen.TarifDTO.Builder newBuilder(ch.dvbern.kibon.exchange.commons.tagesschulen.TarifDTO other) {
    if (other == null) {
      return new ch.dvbern.kibon.exchange.commons.tagesschulen.TarifDTO.Builder();
    } else {
      return new ch.dvbern.kibon.exchange.commons.tagesschulen.TarifDTO.Builder(other);
    }
  }

  /**
   * RecordBuilder for TarifDTO instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TarifDTO>
    implements org.apache.avro.data.RecordBuilder<TarifDTO> {

    private java.time.LocalDate von;
    private java.time.LocalDate bis;
    private int betreuungsMinutenPerWeek;
    private java.math.BigDecimal betreuungsKostenPerHour;
    private java.math.BigDecimal verpflegungsKostenPerWeek;
    private java.math.BigDecimal verpflegungsKostenVerguenstigung;
    private java.math.BigDecimal totalCostsPerWeek;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(ch.dvbern.kibon.exchange.commons.tagesschulen.TarifDTO.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.von)) {
        this.von = data().deepCopy(fields()[0].schema(), other.von);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.bis)) {
        this.bis = data().deepCopy(fields()[1].schema(), other.bis);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.betreuungsMinutenPerWeek)) {
        this.betreuungsMinutenPerWeek = data().deepCopy(fields()[2].schema(), other.betreuungsMinutenPerWeek);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.betreuungsKostenPerHour)) {
        this.betreuungsKostenPerHour = data().deepCopy(fields()[3].schema(), other.betreuungsKostenPerHour);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.verpflegungsKostenPerWeek)) {
        this.verpflegungsKostenPerWeek = data().deepCopy(fields()[4].schema(), other.verpflegungsKostenPerWeek);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.verpflegungsKostenVerguenstigung)) {
        this.verpflegungsKostenVerguenstigung = data().deepCopy(fields()[5].schema(), other.verpflegungsKostenVerguenstigung);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.totalCostsPerWeek)) {
        this.totalCostsPerWeek = data().deepCopy(fields()[6].schema(), other.totalCostsPerWeek);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
    }

    /**
     * Creates a Builder by copying an existing TarifDTO instance
     * @param other The existing instance to copy.
     */
    private Builder(ch.dvbern.kibon.exchange.commons.tagesschulen.TarifDTO other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.von)) {
        this.von = data().deepCopy(fields()[0].schema(), other.von);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.bis)) {
        this.bis = data().deepCopy(fields()[1].schema(), other.bis);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.betreuungsMinutenPerWeek)) {
        this.betreuungsMinutenPerWeek = data().deepCopy(fields()[2].schema(), other.betreuungsMinutenPerWeek);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.betreuungsKostenPerHour)) {
        this.betreuungsKostenPerHour = data().deepCopy(fields()[3].schema(), other.betreuungsKostenPerHour);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.verpflegungsKostenPerWeek)) {
        this.verpflegungsKostenPerWeek = data().deepCopy(fields()[4].schema(), other.verpflegungsKostenPerWeek);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.verpflegungsKostenVerguenstigung)) {
        this.verpflegungsKostenVerguenstigung = data().deepCopy(fields()[5].schema(), other.verpflegungsKostenVerguenstigung);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.totalCostsPerWeek)) {
        this.totalCostsPerWeek = data().deepCopy(fields()[6].schema(), other.totalCostsPerWeek);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'von' field.
      * @return The value.
      */
    public java.time.LocalDate getVon() {
      return von;
    }


    /**
      * Sets the value of the 'von' field.
      * @param value The value of 'von'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.TarifDTO.Builder setVon(java.time.LocalDate value) {
      validate(fields()[0], value);
      this.von = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'von' field has been set.
      * @return True if the 'von' field has been set, false otherwise.
      */
    public boolean hasVon() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'von' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.TarifDTO.Builder clearVon() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'bis' field.
      * @return The value.
      */
    public java.time.LocalDate getBis() {
      return bis;
    }


    /**
      * Sets the value of the 'bis' field.
      * @param value The value of 'bis'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.TarifDTO.Builder setBis(java.time.LocalDate value) {
      validate(fields()[1], value);
      this.bis = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'bis' field has been set.
      * @return True if the 'bis' field has been set, false otherwise.
      */
    public boolean hasBis() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'bis' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.TarifDTO.Builder clearBis() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'betreuungsMinutenPerWeek' field.
      * @return The value.
      */
    public int getBetreuungsMinutenPerWeek() {
      return betreuungsMinutenPerWeek;
    }


    /**
      * Sets the value of the 'betreuungsMinutenPerWeek' field.
      * @param value The value of 'betreuungsMinutenPerWeek'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.TarifDTO.Builder setBetreuungsMinutenPerWeek(int value) {
      validate(fields()[2], value);
      this.betreuungsMinutenPerWeek = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'betreuungsMinutenPerWeek' field has been set.
      * @return True if the 'betreuungsMinutenPerWeek' field has been set, false otherwise.
      */
    public boolean hasBetreuungsMinutenPerWeek() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'betreuungsMinutenPerWeek' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.TarifDTO.Builder clearBetreuungsMinutenPerWeek() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'betreuungsKostenPerHour' field.
      * @return The value.
      */
    public java.math.BigDecimal getBetreuungsKostenPerHour() {
      return betreuungsKostenPerHour;
    }


    /**
      * Sets the value of the 'betreuungsKostenPerHour' field.
      * @param value The value of 'betreuungsKostenPerHour'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.TarifDTO.Builder setBetreuungsKostenPerHour(java.math.BigDecimal value) {
      validate(fields()[3], value);
      this.betreuungsKostenPerHour = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'betreuungsKostenPerHour' field has been set.
      * @return True if the 'betreuungsKostenPerHour' field has been set, false otherwise.
      */
    public boolean hasBetreuungsKostenPerHour() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'betreuungsKostenPerHour' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.TarifDTO.Builder clearBetreuungsKostenPerHour() {
      betreuungsKostenPerHour = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'verpflegungsKostenPerWeek' field.
      * @return The value.
      */
    public java.math.BigDecimal getVerpflegungsKostenPerWeek() {
      return verpflegungsKostenPerWeek;
    }


    /**
      * Sets the value of the 'verpflegungsKostenPerWeek' field.
      * @param value The value of 'verpflegungsKostenPerWeek'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.TarifDTO.Builder setVerpflegungsKostenPerWeek(java.math.BigDecimal value) {
      validate(fields()[4], value);
      this.verpflegungsKostenPerWeek = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'verpflegungsKostenPerWeek' field has been set.
      * @return True if the 'verpflegungsKostenPerWeek' field has been set, false otherwise.
      */
    public boolean hasVerpflegungsKostenPerWeek() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'verpflegungsKostenPerWeek' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.TarifDTO.Builder clearVerpflegungsKostenPerWeek() {
      verpflegungsKostenPerWeek = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'verpflegungsKostenVerguenstigung' field.
      * @return The value.
      */
    public java.math.BigDecimal getVerpflegungsKostenVerguenstigung() {
      return verpflegungsKostenVerguenstigung;
    }


    /**
      * Sets the value of the 'verpflegungsKostenVerguenstigung' field.
      * @param value The value of 'verpflegungsKostenVerguenstigung'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.TarifDTO.Builder setVerpflegungsKostenVerguenstigung(java.math.BigDecimal value) {
      validate(fields()[5], value);
      this.verpflegungsKostenVerguenstigung = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'verpflegungsKostenVerguenstigung' field has been set.
      * @return True if the 'verpflegungsKostenVerguenstigung' field has been set, false otherwise.
      */
    public boolean hasVerpflegungsKostenVerguenstigung() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'verpflegungsKostenVerguenstigung' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.TarifDTO.Builder clearVerpflegungsKostenVerguenstigung() {
      verpflegungsKostenVerguenstigung = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalCostsPerWeek' field.
      * @return The value.
      */
    public java.math.BigDecimal getTotalCostsPerWeek() {
      return totalCostsPerWeek;
    }


    /**
      * Sets the value of the 'totalCostsPerWeek' field.
      * @param value The value of 'totalCostsPerWeek'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.TarifDTO.Builder setTotalCostsPerWeek(java.math.BigDecimal value) {
      validate(fields()[6], value);
      this.totalCostsPerWeek = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'totalCostsPerWeek' field has been set.
      * @return True if the 'totalCostsPerWeek' field has been set, false otherwise.
      */
    public boolean hasTotalCostsPerWeek() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'totalCostsPerWeek' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.TarifDTO.Builder clearTotalCostsPerWeek() {
      totalCostsPerWeek = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public TarifDTO build() {
      try {
        TarifDTO record = new TarifDTO();
        record.von = fieldSetFlags()[0] ? this.von : (java.time.LocalDate) defaultValue(fields()[0]);
        record.bis = fieldSetFlags()[1] ? this.bis : (java.time.LocalDate) defaultValue(fields()[1]);
        record.betreuungsMinutenPerWeek = fieldSetFlags()[2] ? this.betreuungsMinutenPerWeek : (java.lang.Integer) defaultValue(fields()[2]);
        record.betreuungsKostenPerHour = fieldSetFlags()[3] ? this.betreuungsKostenPerHour : (java.math.BigDecimal) defaultValue(fields()[3]);
        record.verpflegungsKostenPerWeek = fieldSetFlags()[4] ? this.verpflegungsKostenPerWeek : (java.math.BigDecimal) defaultValue(fields()[4]);
        record.verpflegungsKostenVerguenstigung = fieldSetFlags()[5] ? this.verpflegungsKostenVerguenstigung : (java.math.BigDecimal) defaultValue(fields()[5]);
        record.totalCostsPerWeek = fieldSetFlags()[6] ? this.totalCostsPerWeek : (java.math.BigDecimal) defaultValue(fields()[6]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<TarifDTO>
    WRITER$ = (org.apache.avro.io.DatumWriter<TarifDTO>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<TarifDTO>
    READER$ = (org.apache.avro.io.DatumReader<TarifDTO>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










