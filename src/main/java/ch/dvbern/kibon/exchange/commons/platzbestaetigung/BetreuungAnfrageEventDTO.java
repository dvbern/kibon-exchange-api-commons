/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package ch.dvbern.kibon.exchange.commons.platzbestaetigung;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class BetreuungAnfrageEventDTO extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -4133735005900151293L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"BetreuungAnfrageEventDTO\",\"namespace\":\"ch.dvbern.kibon.exchange.commons.platzbestaetigung\",\"fields\":[{\"name\":\"refnr\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"periodeVon\",\"type\":{\"type\":\"int\",\"logicalType\":\"date\"}},{\"name\":\"periodeBis\",\"type\":{\"type\":\"int\",\"logicalType\":\"date\"}},{\"name\":\"institutionId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"gesuchsteller\",\"type\":{\"type\":\"record\",\"name\":\"GesuchstellerDTO\",\"fields\":[{\"name\":\"vorname\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"nachname\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"email\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}},{\"name\":\"kind\",\"type\":{\"type\":\"record\",\"name\":\"KindDTO\",\"fields\":[{\"name\":\"vorname\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"nachname\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"geburtsdatum\",\"type\":{\"type\":\"int\",\"logicalType\":\"date\"}}]}},{\"name\":\"betreuungsArt\",\"type\":{\"type\":\"enum\",\"name\":\"BetreuungsangebotTyp\",\"namespace\":\"ch.dvbern.kibon.exchange.commons.types\",\"symbols\":[\"KITA\",\"TAGESSCHULE\",\"TAGESFAMILIEN\",\"FERIENINSEL\"]}},{\"name\":\"abgelehntVonGesuchsteller\",\"type\":\"boolean\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();
static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.DateConversion());
  }

  private static final BinaryMessageEncoder<BetreuungAnfrageEventDTO> ENCODER =
      new BinaryMessageEncoder<BetreuungAnfrageEventDTO>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<BetreuungAnfrageEventDTO> DECODER =
      new BinaryMessageDecoder<BetreuungAnfrageEventDTO>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<BetreuungAnfrageEventDTO> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<BetreuungAnfrageEventDTO> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<BetreuungAnfrageEventDTO> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<BetreuungAnfrageEventDTO>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this BetreuungAnfrageEventDTO to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a BetreuungAnfrageEventDTO from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a BetreuungAnfrageEventDTO instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static BetreuungAnfrageEventDTO fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.String refnr;
   private java.time.LocalDate periodeVon;
   private java.time.LocalDate periodeBis;
   private java.lang.String institutionId;
   private ch.dvbern.kibon.exchange.commons.platzbestaetigung.GesuchstellerDTO gesuchsteller;
   private ch.dvbern.kibon.exchange.commons.platzbestaetigung.KindDTO kind;
   private ch.dvbern.kibon.exchange.commons.types.BetreuungsangebotTyp betreuungsArt;
   private boolean abgelehntVonGesuchsteller;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public BetreuungAnfrageEventDTO() {}

  /**
   * All-args constructor.
   * @param refnr The new value for refnr
   * @param periodeVon The new value for periodeVon
   * @param periodeBis The new value for periodeBis
   * @param institutionId The new value for institutionId
   * @param gesuchsteller The new value for gesuchsteller
   * @param kind The new value for kind
   * @param betreuungsArt The new value for betreuungsArt
   * @param abgelehntVonGesuchsteller The new value for abgelehntVonGesuchsteller
   */
  public BetreuungAnfrageEventDTO(java.lang.String refnr, java.time.LocalDate periodeVon, java.time.LocalDate periodeBis, java.lang.String institutionId, ch.dvbern.kibon.exchange.commons.platzbestaetigung.GesuchstellerDTO gesuchsteller, ch.dvbern.kibon.exchange.commons.platzbestaetigung.KindDTO kind, ch.dvbern.kibon.exchange.commons.types.BetreuungsangebotTyp betreuungsArt, java.lang.Boolean abgelehntVonGesuchsteller) {
    this.refnr = refnr;
    this.periodeVon = periodeVon;
    this.periodeBis = periodeBis;
    this.institutionId = institutionId;
    this.gesuchsteller = gesuchsteller;
    this.kind = kind;
    this.betreuungsArt = betreuungsArt;
    this.abgelehntVonGesuchsteller = abgelehntVonGesuchsteller;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return refnr;
    case 1: return periodeVon;
    case 2: return periodeBis;
    case 3: return institutionId;
    case 4: return gesuchsteller;
    case 5: return kind;
    case 6: return betreuungsArt;
    case 7: return abgelehntVonGesuchsteller;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      new org.apache.avro.data.TimeConversions.DateConversion(),
      new org.apache.avro.data.TimeConversions.DateConversion(),
      null,
      null,
      null,
      null,
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: refnr = value$ != null ? value$.toString() : null; break;
    case 1: periodeVon = (java.time.LocalDate)value$; break;
    case 2: periodeBis = (java.time.LocalDate)value$; break;
    case 3: institutionId = value$ != null ? value$.toString() : null; break;
    case 4: gesuchsteller = (ch.dvbern.kibon.exchange.commons.platzbestaetigung.GesuchstellerDTO)value$; break;
    case 5: kind = (ch.dvbern.kibon.exchange.commons.platzbestaetigung.KindDTO)value$; break;
    case 6: betreuungsArt = (ch.dvbern.kibon.exchange.commons.types.BetreuungsangebotTyp)value$; break;
    case 7: abgelehntVonGesuchsteller = (java.lang.Boolean)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'refnr' field.
   * @return The value of the 'refnr' field.
   */
  public java.lang.String getRefnr() {
    return refnr;
  }


  /**
   * Sets the value of the 'refnr' field.
   * @param value the value to set.
   */
  public void setRefnr(java.lang.String value) {
    this.refnr = value;
  }

  /**
   * Gets the value of the 'periodeVon' field.
   * @return The value of the 'periodeVon' field.
   */
  public java.time.LocalDate getPeriodeVon() {
    return periodeVon;
  }


  /**
   * Sets the value of the 'periodeVon' field.
   * @param value the value to set.
   */
  public void setPeriodeVon(java.time.LocalDate value) {
    this.periodeVon = value;
  }

  /**
   * Gets the value of the 'periodeBis' field.
   * @return The value of the 'periodeBis' field.
   */
  public java.time.LocalDate getPeriodeBis() {
    return periodeBis;
  }


  /**
   * Sets the value of the 'periodeBis' field.
   * @param value the value to set.
   */
  public void setPeriodeBis(java.time.LocalDate value) {
    this.periodeBis = value;
  }

  /**
   * Gets the value of the 'institutionId' field.
   * @return The value of the 'institutionId' field.
   */
  public java.lang.String getInstitutionId() {
    return institutionId;
  }


  /**
   * Sets the value of the 'institutionId' field.
   * @param value the value to set.
   */
  public void setInstitutionId(java.lang.String value) {
    this.institutionId = value;
  }

  /**
   * Gets the value of the 'gesuchsteller' field.
   * @return The value of the 'gesuchsteller' field.
   */
  public ch.dvbern.kibon.exchange.commons.platzbestaetigung.GesuchstellerDTO getGesuchsteller() {
    return gesuchsteller;
  }


  /**
   * Sets the value of the 'gesuchsteller' field.
   * @param value the value to set.
   */
  public void setGesuchsteller(ch.dvbern.kibon.exchange.commons.platzbestaetigung.GesuchstellerDTO value) {
    this.gesuchsteller = value;
  }

  /**
   * Gets the value of the 'kind' field.
   * @return The value of the 'kind' field.
   */
  public ch.dvbern.kibon.exchange.commons.platzbestaetigung.KindDTO getKind() {
    return kind;
  }


  /**
   * Sets the value of the 'kind' field.
   * @param value the value to set.
   */
  public void setKind(ch.dvbern.kibon.exchange.commons.platzbestaetigung.KindDTO value) {
    this.kind = value;
  }

  /**
   * Gets the value of the 'betreuungsArt' field.
   * @return The value of the 'betreuungsArt' field.
   */
  public ch.dvbern.kibon.exchange.commons.types.BetreuungsangebotTyp getBetreuungsArt() {
    return betreuungsArt;
  }


  /**
   * Sets the value of the 'betreuungsArt' field.
   * @param value the value to set.
   */
  public void setBetreuungsArt(ch.dvbern.kibon.exchange.commons.types.BetreuungsangebotTyp value) {
    this.betreuungsArt = value;
  }

  /**
   * Gets the value of the 'abgelehntVonGesuchsteller' field.
   * @return The value of the 'abgelehntVonGesuchsteller' field.
   */
  public boolean getAbgelehntVonGesuchsteller() {
    return abgelehntVonGesuchsteller;
  }


  /**
   * Sets the value of the 'abgelehntVonGesuchsteller' field.
   * @param value the value to set.
   */
  public void setAbgelehntVonGesuchsteller(boolean value) {
    this.abgelehntVonGesuchsteller = value;
  }

  /**
   * Creates a new BetreuungAnfrageEventDTO RecordBuilder.
   * @return A new BetreuungAnfrageEventDTO RecordBuilder
   */
  public static ch.dvbern.kibon.exchange.commons.platzbestaetigung.BetreuungAnfrageEventDTO.Builder newBuilder() {
    return new ch.dvbern.kibon.exchange.commons.platzbestaetigung.BetreuungAnfrageEventDTO.Builder();
  }

  /**
   * Creates a new BetreuungAnfrageEventDTO RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new BetreuungAnfrageEventDTO RecordBuilder
   */
  public static ch.dvbern.kibon.exchange.commons.platzbestaetigung.BetreuungAnfrageEventDTO.Builder newBuilder(ch.dvbern.kibon.exchange.commons.platzbestaetigung.BetreuungAnfrageEventDTO.Builder other) {
    if (other == null) {
      return new ch.dvbern.kibon.exchange.commons.platzbestaetigung.BetreuungAnfrageEventDTO.Builder();
    } else {
      return new ch.dvbern.kibon.exchange.commons.platzbestaetigung.BetreuungAnfrageEventDTO.Builder(other);
    }
  }

  /**
   * Creates a new BetreuungAnfrageEventDTO RecordBuilder by copying an existing BetreuungAnfrageEventDTO instance.
   * @param other The existing instance to copy.
   * @return A new BetreuungAnfrageEventDTO RecordBuilder
   */
  public static ch.dvbern.kibon.exchange.commons.platzbestaetigung.BetreuungAnfrageEventDTO.Builder newBuilder(ch.dvbern.kibon.exchange.commons.platzbestaetigung.BetreuungAnfrageEventDTO other) {
    if (other == null) {
      return new ch.dvbern.kibon.exchange.commons.platzbestaetigung.BetreuungAnfrageEventDTO.Builder();
    } else {
      return new ch.dvbern.kibon.exchange.commons.platzbestaetigung.BetreuungAnfrageEventDTO.Builder(other);
    }
  }

  /**
   * RecordBuilder for BetreuungAnfrageEventDTO instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<BetreuungAnfrageEventDTO>
    implements org.apache.avro.data.RecordBuilder<BetreuungAnfrageEventDTO> {

    private java.lang.String refnr;
    private java.time.LocalDate periodeVon;
    private java.time.LocalDate periodeBis;
    private java.lang.String institutionId;
    private ch.dvbern.kibon.exchange.commons.platzbestaetigung.GesuchstellerDTO gesuchsteller;
    private ch.dvbern.kibon.exchange.commons.platzbestaetigung.GesuchstellerDTO.Builder gesuchstellerBuilder;
    private ch.dvbern.kibon.exchange.commons.platzbestaetigung.KindDTO kind;
    private ch.dvbern.kibon.exchange.commons.platzbestaetigung.KindDTO.Builder kindBuilder;
    private ch.dvbern.kibon.exchange.commons.types.BetreuungsangebotTyp betreuungsArt;
    private boolean abgelehntVonGesuchsteller;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(ch.dvbern.kibon.exchange.commons.platzbestaetigung.BetreuungAnfrageEventDTO.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.refnr)) {
        this.refnr = data().deepCopy(fields()[0].schema(), other.refnr);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.periodeVon)) {
        this.periodeVon = data().deepCopy(fields()[1].schema(), other.periodeVon);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.periodeBis)) {
        this.periodeBis = data().deepCopy(fields()[2].schema(), other.periodeBis);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.institutionId)) {
        this.institutionId = data().deepCopy(fields()[3].schema(), other.institutionId);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.gesuchsteller)) {
        this.gesuchsteller = data().deepCopy(fields()[4].schema(), other.gesuchsteller);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (other.hasGesuchstellerBuilder()) {
        this.gesuchstellerBuilder = ch.dvbern.kibon.exchange.commons.platzbestaetigung.GesuchstellerDTO.newBuilder(other.getGesuchstellerBuilder());
      }
      if (isValidValue(fields()[5], other.kind)) {
        this.kind = data().deepCopy(fields()[5].schema(), other.kind);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (other.hasKindBuilder()) {
        this.kindBuilder = ch.dvbern.kibon.exchange.commons.platzbestaetigung.KindDTO.newBuilder(other.getKindBuilder());
      }
      if (isValidValue(fields()[6], other.betreuungsArt)) {
        this.betreuungsArt = data().deepCopy(fields()[6].schema(), other.betreuungsArt);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.abgelehntVonGesuchsteller)) {
        this.abgelehntVonGesuchsteller = data().deepCopy(fields()[7].schema(), other.abgelehntVonGesuchsteller);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
    }

    /**
     * Creates a Builder by copying an existing BetreuungAnfrageEventDTO instance
     * @param other The existing instance to copy.
     */
    private Builder(ch.dvbern.kibon.exchange.commons.platzbestaetigung.BetreuungAnfrageEventDTO other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.refnr)) {
        this.refnr = data().deepCopy(fields()[0].schema(), other.refnr);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.periodeVon)) {
        this.periodeVon = data().deepCopy(fields()[1].schema(), other.periodeVon);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.periodeBis)) {
        this.periodeBis = data().deepCopy(fields()[2].schema(), other.periodeBis);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.institutionId)) {
        this.institutionId = data().deepCopy(fields()[3].schema(), other.institutionId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.gesuchsteller)) {
        this.gesuchsteller = data().deepCopy(fields()[4].schema(), other.gesuchsteller);
        fieldSetFlags()[4] = true;
      }
      this.gesuchstellerBuilder = null;
      if (isValidValue(fields()[5], other.kind)) {
        this.kind = data().deepCopy(fields()[5].schema(), other.kind);
        fieldSetFlags()[5] = true;
      }
      this.kindBuilder = null;
      if (isValidValue(fields()[6], other.betreuungsArt)) {
        this.betreuungsArt = data().deepCopy(fields()[6].schema(), other.betreuungsArt);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.abgelehntVonGesuchsteller)) {
        this.abgelehntVonGesuchsteller = data().deepCopy(fields()[7].schema(), other.abgelehntVonGesuchsteller);
        fieldSetFlags()[7] = true;
      }
    }

    /**
      * Gets the value of the 'refnr' field.
      * @return The value.
      */
    public java.lang.String getRefnr() {
      return refnr;
    }


    /**
      * Sets the value of the 'refnr' field.
      * @param value The value of 'refnr'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.platzbestaetigung.BetreuungAnfrageEventDTO.Builder setRefnr(java.lang.String value) {
      validate(fields()[0], value);
      this.refnr = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'refnr' field has been set.
      * @return True if the 'refnr' field has been set, false otherwise.
      */
    public boolean hasRefnr() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'refnr' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.platzbestaetigung.BetreuungAnfrageEventDTO.Builder clearRefnr() {
      refnr = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'periodeVon' field.
      * @return The value.
      */
    public java.time.LocalDate getPeriodeVon() {
      return periodeVon;
    }


    /**
      * Sets the value of the 'periodeVon' field.
      * @param value The value of 'periodeVon'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.platzbestaetigung.BetreuungAnfrageEventDTO.Builder setPeriodeVon(java.time.LocalDate value) {
      validate(fields()[1], value);
      this.periodeVon = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'periodeVon' field has been set.
      * @return True if the 'periodeVon' field has been set, false otherwise.
      */
    public boolean hasPeriodeVon() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'periodeVon' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.platzbestaetigung.BetreuungAnfrageEventDTO.Builder clearPeriodeVon() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'periodeBis' field.
      * @return The value.
      */
    public java.time.LocalDate getPeriodeBis() {
      return periodeBis;
    }


    /**
      * Sets the value of the 'periodeBis' field.
      * @param value The value of 'periodeBis'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.platzbestaetigung.BetreuungAnfrageEventDTO.Builder setPeriodeBis(java.time.LocalDate value) {
      validate(fields()[2], value);
      this.periodeBis = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'periodeBis' field has been set.
      * @return True if the 'periodeBis' field has been set, false otherwise.
      */
    public boolean hasPeriodeBis() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'periodeBis' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.platzbestaetigung.BetreuungAnfrageEventDTO.Builder clearPeriodeBis() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'institutionId' field.
      * @return The value.
      */
    public java.lang.String getInstitutionId() {
      return institutionId;
    }


    /**
      * Sets the value of the 'institutionId' field.
      * @param value The value of 'institutionId'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.platzbestaetigung.BetreuungAnfrageEventDTO.Builder setInstitutionId(java.lang.String value) {
      validate(fields()[3], value);
      this.institutionId = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'institutionId' field has been set.
      * @return True if the 'institutionId' field has been set, false otherwise.
      */
    public boolean hasInstitutionId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'institutionId' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.platzbestaetigung.BetreuungAnfrageEventDTO.Builder clearInstitutionId() {
      institutionId = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'gesuchsteller' field.
      * @return The value.
      */
    public ch.dvbern.kibon.exchange.commons.platzbestaetigung.GesuchstellerDTO getGesuchsteller() {
      return gesuchsteller;
    }


    /**
      * Sets the value of the 'gesuchsteller' field.
      * @param value The value of 'gesuchsteller'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.platzbestaetigung.BetreuungAnfrageEventDTO.Builder setGesuchsteller(ch.dvbern.kibon.exchange.commons.platzbestaetigung.GesuchstellerDTO value) {
      validate(fields()[4], value);
      this.gesuchstellerBuilder = null;
      this.gesuchsteller = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'gesuchsteller' field has been set.
      * @return True if the 'gesuchsteller' field has been set, false otherwise.
      */
    public boolean hasGesuchsteller() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'gesuchsteller' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public ch.dvbern.kibon.exchange.commons.platzbestaetigung.GesuchstellerDTO.Builder getGesuchstellerBuilder() {
      if (gesuchstellerBuilder == null) {
        if (hasGesuchsteller()) {
          setGesuchstellerBuilder(ch.dvbern.kibon.exchange.commons.platzbestaetigung.GesuchstellerDTO.newBuilder(gesuchsteller));
        } else {
          setGesuchstellerBuilder(ch.dvbern.kibon.exchange.commons.platzbestaetigung.GesuchstellerDTO.newBuilder());
        }
      }
      return gesuchstellerBuilder;
    }

    /**
     * Sets the Builder instance for the 'gesuchsteller' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public ch.dvbern.kibon.exchange.commons.platzbestaetigung.BetreuungAnfrageEventDTO.Builder setGesuchstellerBuilder(ch.dvbern.kibon.exchange.commons.platzbestaetigung.GesuchstellerDTO.Builder value) {
      clearGesuchsteller();
      gesuchstellerBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'gesuchsteller' field has an active Builder instance
     * @return True if the 'gesuchsteller' field has an active Builder instance
     */
    public boolean hasGesuchstellerBuilder() {
      return gesuchstellerBuilder != null;
    }

    /**
      * Clears the value of the 'gesuchsteller' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.platzbestaetigung.BetreuungAnfrageEventDTO.Builder clearGesuchsteller() {
      gesuchsteller = null;
      gesuchstellerBuilder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'kind' field.
      * @return The value.
      */
    public ch.dvbern.kibon.exchange.commons.platzbestaetigung.KindDTO getKind() {
      return kind;
    }


    /**
      * Sets the value of the 'kind' field.
      * @param value The value of 'kind'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.platzbestaetigung.BetreuungAnfrageEventDTO.Builder setKind(ch.dvbern.kibon.exchange.commons.platzbestaetigung.KindDTO value) {
      validate(fields()[5], value);
      this.kindBuilder = null;
      this.kind = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'kind' field has been set.
      * @return True if the 'kind' field has been set, false otherwise.
      */
    public boolean hasKind() {
      return fieldSetFlags()[5];
    }

    /**
     * Gets the Builder instance for the 'kind' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public ch.dvbern.kibon.exchange.commons.platzbestaetigung.KindDTO.Builder getKindBuilder() {
      if (kindBuilder == null) {
        if (hasKind()) {
          setKindBuilder(ch.dvbern.kibon.exchange.commons.platzbestaetigung.KindDTO.newBuilder(kind));
        } else {
          setKindBuilder(ch.dvbern.kibon.exchange.commons.platzbestaetigung.KindDTO.newBuilder());
        }
      }
      return kindBuilder;
    }

    /**
     * Sets the Builder instance for the 'kind' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public ch.dvbern.kibon.exchange.commons.platzbestaetigung.BetreuungAnfrageEventDTO.Builder setKindBuilder(ch.dvbern.kibon.exchange.commons.platzbestaetigung.KindDTO.Builder value) {
      clearKind();
      kindBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'kind' field has an active Builder instance
     * @return True if the 'kind' field has an active Builder instance
     */
    public boolean hasKindBuilder() {
      return kindBuilder != null;
    }

    /**
      * Clears the value of the 'kind' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.platzbestaetigung.BetreuungAnfrageEventDTO.Builder clearKind() {
      kind = null;
      kindBuilder = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'betreuungsArt' field.
      * @return The value.
      */
    public ch.dvbern.kibon.exchange.commons.types.BetreuungsangebotTyp getBetreuungsArt() {
      return betreuungsArt;
    }


    /**
      * Sets the value of the 'betreuungsArt' field.
      * @param value The value of 'betreuungsArt'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.platzbestaetigung.BetreuungAnfrageEventDTO.Builder setBetreuungsArt(ch.dvbern.kibon.exchange.commons.types.BetreuungsangebotTyp value) {
      validate(fields()[6], value);
      this.betreuungsArt = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'betreuungsArt' field has been set.
      * @return True if the 'betreuungsArt' field has been set, false otherwise.
      */
    public boolean hasBetreuungsArt() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'betreuungsArt' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.platzbestaetigung.BetreuungAnfrageEventDTO.Builder clearBetreuungsArt() {
      betreuungsArt = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'abgelehntVonGesuchsteller' field.
      * @return The value.
      */
    public boolean getAbgelehntVonGesuchsteller() {
      return abgelehntVonGesuchsteller;
    }


    /**
      * Sets the value of the 'abgelehntVonGesuchsteller' field.
      * @param value The value of 'abgelehntVonGesuchsteller'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.platzbestaetigung.BetreuungAnfrageEventDTO.Builder setAbgelehntVonGesuchsteller(boolean value) {
      validate(fields()[7], value);
      this.abgelehntVonGesuchsteller = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'abgelehntVonGesuchsteller' field has been set.
      * @return True if the 'abgelehntVonGesuchsteller' field has been set, false otherwise.
      */
    public boolean hasAbgelehntVonGesuchsteller() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'abgelehntVonGesuchsteller' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.platzbestaetigung.BetreuungAnfrageEventDTO.Builder clearAbgelehntVonGesuchsteller() {
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public BetreuungAnfrageEventDTO build() {
      try {
        BetreuungAnfrageEventDTO record = new BetreuungAnfrageEventDTO();
        record.refnr = fieldSetFlags()[0] ? this.refnr : (java.lang.String) defaultValue(fields()[0]);
        record.periodeVon = fieldSetFlags()[1] ? this.periodeVon : (java.time.LocalDate) defaultValue(fields()[1]);
        record.periodeBis = fieldSetFlags()[2] ? this.periodeBis : (java.time.LocalDate) defaultValue(fields()[2]);
        record.institutionId = fieldSetFlags()[3] ? this.institutionId : (java.lang.String) defaultValue(fields()[3]);
        if (gesuchstellerBuilder != null) {
          try {
            record.gesuchsteller = this.gesuchstellerBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("gesuchsteller"));
            throw e;
          }
        } else {
          record.gesuchsteller = fieldSetFlags()[4] ? this.gesuchsteller : (ch.dvbern.kibon.exchange.commons.platzbestaetigung.GesuchstellerDTO) defaultValue(fields()[4]);
        }
        if (kindBuilder != null) {
          try {
            record.kind = this.kindBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("kind"));
            throw e;
          }
        } else {
          record.kind = fieldSetFlags()[5] ? this.kind : (ch.dvbern.kibon.exchange.commons.platzbestaetigung.KindDTO) defaultValue(fields()[5]);
        }
        record.betreuungsArt = fieldSetFlags()[6] ? this.betreuungsArt : (ch.dvbern.kibon.exchange.commons.types.BetreuungsangebotTyp) defaultValue(fields()[6]);
        record.abgelehntVonGesuchsteller = fieldSetFlags()[7] ? this.abgelehntVonGesuchsteller : (java.lang.Boolean) defaultValue(fields()[7]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<BetreuungAnfrageEventDTO>
    WRITER$ = (org.apache.avro.io.DatumWriter<BetreuungAnfrageEventDTO>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<BetreuungAnfrageEventDTO>
    READER$ = (org.apache.avro.io.DatumReader<BetreuungAnfrageEventDTO>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










