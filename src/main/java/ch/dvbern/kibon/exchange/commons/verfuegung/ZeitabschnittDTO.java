/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package ch.dvbern.kibon.exchange.commons.verfuegung;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class ZeitabschnittDTO extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -2894962162203064837L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ZeitabschnittDTO\",\"namespace\":\"ch.dvbern.kibon.exchange.commons.verfuegung\",\"fields\":[{\"name\":\"von\",\"type\":{\"type\":\"int\",\"logicalType\":\"date\"}},{\"name\":\"bis\",\"type\":{\"type\":\"int\",\"logicalType\":\"date\"}},{\"name\":\"verfuegungNr\",\"type\":\"int\"},{\"name\":\"effektiveBetreuungPct\",\"type\":{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":19,\"scale\":2}},{\"name\":\"anspruchPct\",\"type\":\"int\"},{\"name\":\"verguenstigtPct\",\"type\":{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":19,\"scale\":2}},{\"name\":\"vollkosten\",\"type\":{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":19,\"scale\":2}},{\"name\":\"betreuungsgutschein\",\"type\":{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":19,\"scale\":2}},{\"name\":\"minimalerElternbeitrag\",\"type\":{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":19,\"scale\":2}},{\"name\":\"verguenstigung\",\"type\":{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":19,\"scale\":2}},{\"name\":\"verfuegteAnzahlZeiteinheiten\",\"type\":{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":19,\"scale\":2}},{\"name\":\"anspruchsberechtigteAnzahlZeiteinheiten\",\"type\":{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":19,\"scale\":2}},{\"name\":\"zeiteinheit\",\"type\":{\"type\":\"enum\",\"name\":\"Zeiteinheit\",\"namespace\":\"ch.dvbern.kibon.exchange.commons.types\",\"symbols\":[\"DAYS\",\"HOURS\"]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();
static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.DateConversion());
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.DecimalConversion());
  }

  private static final BinaryMessageEncoder<ZeitabschnittDTO> ENCODER =
      new BinaryMessageEncoder<ZeitabschnittDTO>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ZeitabschnittDTO> DECODER =
      new BinaryMessageDecoder<ZeitabschnittDTO>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ZeitabschnittDTO> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ZeitabschnittDTO> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ZeitabschnittDTO> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ZeitabschnittDTO>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ZeitabschnittDTO to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ZeitabschnittDTO from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ZeitabschnittDTO instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ZeitabschnittDTO fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.time.LocalDate von;
   private java.time.LocalDate bis;
   private int verfuegungNr;
   private java.math.BigDecimal effektiveBetreuungPct;
   private int anspruchPct;
   private java.math.BigDecimal verguenstigtPct;
   private java.math.BigDecimal vollkosten;
   private java.math.BigDecimal betreuungsgutschein;
   private java.math.BigDecimal minimalerElternbeitrag;
   private java.math.BigDecimal verguenstigung;
   private java.math.BigDecimal verfuegteAnzahlZeiteinheiten;
   private java.math.BigDecimal anspruchsberechtigteAnzahlZeiteinheiten;
   private ch.dvbern.kibon.exchange.commons.types.Zeiteinheit zeiteinheit;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ZeitabschnittDTO() {}

  /**
   * All-args constructor.
   * @param von The new value for von
   * @param bis The new value for bis
   * @param verfuegungNr The new value for verfuegungNr
   * @param effektiveBetreuungPct The new value for effektiveBetreuungPct
   * @param anspruchPct The new value for anspruchPct
   * @param verguenstigtPct The new value for verguenstigtPct
   * @param vollkosten The new value for vollkosten
   * @param betreuungsgutschein The new value for betreuungsgutschein
   * @param minimalerElternbeitrag The new value for minimalerElternbeitrag
   * @param verguenstigung The new value for verguenstigung
   * @param verfuegteAnzahlZeiteinheiten The new value for verfuegteAnzahlZeiteinheiten
   * @param anspruchsberechtigteAnzahlZeiteinheiten The new value for anspruchsberechtigteAnzahlZeiteinheiten
   * @param zeiteinheit The new value for zeiteinheit
   */
  public ZeitabschnittDTO(java.time.LocalDate von, java.time.LocalDate bis, java.lang.Integer verfuegungNr, java.math.BigDecimal effektiveBetreuungPct, java.lang.Integer anspruchPct, java.math.BigDecimal verguenstigtPct, java.math.BigDecimal vollkosten, java.math.BigDecimal betreuungsgutschein, java.math.BigDecimal minimalerElternbeitrag, java.math.BigDecimal verguenstigung, java.math.BigDecimal verfuegteAnzahlZeiteinheiten, java.math.BigDecimal anspruchsberechtigteAnzahlZeiteinheiten, ch.dvbern.kibon.exchange.commons.types.Zeiteinheit zeiteinheit) {
    this.von = von;
    this.bis = bis;
    this.verfuegungNr = verfuegungNr;
    this.effektiveBetreuungPct = effektiveBetreuungPct;
    this.anspruchPct = anspruchPct;
    this.verguenstigtPct = verguenstigtPct;
    this.vollkosten = vollkosten;
    this.betreuungsgutschein = betreuungsgutschein;
    this.minimalerElternbeitrag = minimalerElternbeitrag;
    this.verguenstigung = verguenstigung;
    this.verfuegteAnzahlZeiteinheiten = verfuegteAnzahlZeiteinheiten;
    this.anspruchsberechtigteAnzahlZeiteinheiten = anspruchsberechtigteAnzahlZeiteinheiten;
    this.zeiteinheit = zeiteinheit;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return von;
    case 1: return bis;
    case 2: return verfuegungNr;
    case 3: return effektiveBetreuungPct;
    case 4: return anspruchPct;
    case 5: return verguenstigtPct;
    case 6: return vollkosten;
    case 7: return betreuungsgutschein;
    case 8: return minimalerElternbeitrag;
    case 9: return verguenstigung;
    case 10: return verfuegteAnzahlZeiteinheiten;
    case 11: return anspruchsberechtigteAnzahlZeiteinheiten;
    case 12: return zeiteinheit;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      new org.apache.avro.data.TimeConversions.DateConversion(),
      new org.apache.avro.data.TimeConversions.DateConversion(),
      null,
      new org.apache.avro.Conversions.DecimalConversion(),
      null,
      new org.apache.avro.Conversions.DecimalConversion(),
      new org.apache.avro.Conversions.DecimalConversion(),
      new org.apache.avro.Conversions.DecimalConversion(),
      new org.apache.avro.Conversions.DecimalConversion(),
      new org.apache.avro.Conversions.DecimalConversion(),
      new org.apache.avro.Conversions.DecimalConversion(),
      new org.apache.avro.Conversions.DecimalConversion(),
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: von = (java.time.LocalDate)value$; break;
    case 1: bis = (java.time.LocalDate)value$; break;
    case 2: verfuegungNr = (java.lang.Integer)value$; break;
    case 3: effektiveBetreuungPct = (java.math.BigDecimal)value$; break;
    case 4: anspruchPct = (java.lang.Integer)value$; break;
    case 5: verguenstigtPct = (java.math.BigDecimal)value$; break;
    case 6: vollkosten = (java.math.BigDecimal)value$; break;
    case 7: betreuungsgutschein = (java.math.BigDecimal)value$; break;
    case 8: minimalerElternbeitrag = (java.math.BigDecimal)value$; break;
    case 9: verguenstigung = (java.math.BigDecimal)value$; break;
    case 10: verfuegteAnzahlZeiteinheiten = (java.math.BigDecimal)value$; break;
    case 11: anspruchsberechtigteAnzahlZeiteinheiten = (java.math.BigDecimal)value$; break;
    case 12: zeiteinheit = (ch.dvbern.kibon.exchange.commons.types.Zeiteinheit)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'von' field.
   * @return The value of the 'von' field.
   */
  public java.time.LocalDate getVon() {
    return von;
  }


  /**
   * Sets the value of the 'von' field.
   * @param value the value to set.
   */
  public void setVon(java.time.LocalDate value) {
    this.von = value;
  }

  /**
   * Gets the value of the 'bis' field.
   * @return The value of the 'bis' field.
   */
  public java.time.LocalDate getBis() {
    return bis;
  }


  /**
   * Sets the value of the 'bis' field.
   * @param value the value to set.
   */
  public void setBis(java.time.LocalDate value) {
    this.bis = value;
  }

  /**
   * Gets the value of the 'verfuegungNr' field.
   * @return The value of the 'verfuegungNr' field.
   */
  public int getVerfuegungNr() {
    return verfuegungNr;
  }


  /**
   * Sets the value of the 'verfuegungNr' field.
   * @param value the value to set.
   */
  public void setVerfuegungNr(int value) {
    this.verfuegungNr = value;
  }

  /**
   * Gets the value of the 'effektiveBetreuungPct' field.
   * @return The value of the 'effektiveBetreuungPct' field.
   */
  public java.math.BigDecimal getEffektiveBetreuungPct() {
    return effektiveBetreuungPct;
  }


  /**
   * Sets the value of the 'effektiveBetreuungPct' field.
   * @param value the value to set.
   */
  public void setEffektiveBetreuungPct(java.math.BigDecimal value) {
    this.effektiveBetreuungPct = value;
  }

  /**
   * Gets the value of the 'anspruchPct' field.
   * @return The value of the 'anspruchPct' field.
   */
  public int getAnspruchPct() {
    return anspruchPct;
  }


  /**
   * Sets the value of the 'anspruchPct' field.
   * @param value the value to set.
   */
  public void setAnspruchPct(int value) {
    this.anspruchPct = value;
  }

  /**
   * Gets the value of the 'verguenstigtPct' field.
   * @return The value of the 'verguenstigtPct' field.
   */
  public java.math.BigDecimal getVerguenstigtPct() {
    return verguenstigtPct;
  }


  /**
   * Sets the value of the 'verguenstigtPct' field.
   * @param value the value to set.
   */
  public void setVerguenstigtPct(java.math.BigDecimal value) {
    this.verguenstigtPct = value;
  }

  /**
   * Gets the value of the 'vollkosten' field.
   * @return The value of the 'vollkosten' field.
   */
  public java.math.BigDecimal getVollkosten() {
    return vollkosten;
  }


  /**
   * Sets the value of the 'vollkosten' field.
   * @param value the value to set.
   */
  public void setVollkosten(java.math.BigDecimal value) {
    this.vollkosten = value;
  }

  /**
   * Gets the value of the 'betreuungsgutschein' field.
   * @return The value of the 'betreuungsgutschein' field.
   */
  public java.math.BigDecimal getBetreuungsgutschein() {
    return betreuungsgutschein;
  }


  /**
   * Sets the value of the 'betreuungsgutschein' field.
   * @param value the value to set.
   */
  public void setBetreuungsgutschein(java.math.BigDecimal value) {
    this.betreuungsgutschein = value;
  }

  /**
   * Gets the value of the 'minimalerElternbeitrag' field.
   * @return The value of the 'minimalerElternbeitrag' field.
   */
  public java.math.BigDecimal getMinimalerElternbeitrag() {
    return minimalerElternbeitrag;
  }


  /**
   * Sets the value of the 'minimalerElternbeitrag' field.
   * @param value the value to set.
   */
  public void setMinimalerElternbeitrag(java.math.BigDecimal value) {
    this.minimalerElternbeitrag = value;
  }

  /**
   * Gets the value of the 'verguenstigung' field.
   * @return The value of the 'verguenstigung' field.
   */
  public java.math.BigDecimal getVerguenstigung() {
    return verguenstigung;
  }


  /**
   * Sets the value of the 'verguenstigung' field.
   * @param value the value to set.
   */
  public void setVerguenstigung(java.math.BigDecimal value) {
    this.verguenstigung = value;
  }

  /**
   * Gets the value of the 'verfuegteAnzahlZeiteinheiten' field.
   * @return The value of the 'verfuegteAnzahlZeiteinheiten' field.
   */
  public java.math.BigDecimal getVerfuegteAnzahlZeiteinheiten() {
    return verfuegteAnzahlZeiteinheiten;
  }


  /**
   * Sets the value of the 'verfuegteAnzahlZeiteinheiten' field.
   * @param value the value to set.
   */
  public void setVerfuegteAnzahlZeiteinheiten(java.math.BigDecimal value) {
    this.verfuegteAnzahlZeiteinheiten = value;
  }

  /**
   * Gets the value of the 'anspruchsberechtigteAnzahlZeiteinheiten' field.
   * @return The value of the 'anspruchsberechtigteAnzahlZeiteinheiten' field.
   */
  public java.math.BigDecimal getAnspruchsberechtigteAnzahlZeiteinheiten() {
    return anspruchsberechtigteAnzahlZeiteinheiten;
  }


  /**
   * Sets the value of the 'anspruchsberechtigteAnzahlZeiteinheiten' field.
   * @param value the value to set.
   */
  public void setAnspruchsberechtigteAnzahlZeiteinheiten(java.math.BigDecimal value) {
    this.anspruchsberechtigteAnzahlZeiteinheiten = value;
  }

  /**
   * Gets the value of the 'zeiteinheit' field.
   * @return The value of the 'zeiteinheit' field.
   */
  public ch.dvbern.kibon.exchange.commons.types.Zeiteinheit getZeiteinheit() {
    return zeiteinheit;
  }


  /**
   * Sets the value of the 'zeiteinheit' field.
   * @param value the value to set.
   */
  public void setZeiteinheit(ch.dvbern.kibon.exchange.commons.types.Zeiteinheit value) {
    this.zeiteinheit = value;
  }

  /**
   * Creates a new ZeitabschnittDTO RecordBuilder.
   * @return A new ZeitabschnittDTO RecordBuilder
   */
  public static ch.dvbern.kibon.exchange.commons.verfuegung.ZeitabschnittDTO.Builder newBuilder() {
    return new ch.dvbern.kibon.exchange.commons.verfuegung.ZeitabschnittDTO.Builder();
  }

  /**
   * Creates a new ZeitabschnittDTO RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ZeitabschnittDTO RecordBuilder
   */
  public static ch.dvbern.kibon.exchange.commons.verfuegung.ZeitabschnittDTO.Builder newBuilder(ch.dvbern.kibon.exchange.commons.verfuegung.ZeitabschnittDTO.Builder other) {
    if (other == null) {
      return new ch.dvbern.kibon.exchange.commons.verfuegung.ZeitabschnittDTO.Builder();
    } else {
      return new ch.dvbern.kibon.exchange.commons.verfuegung.ZeitabschnittDTO.Builder(other);
    }
  }

  /**
   * Creates a new ZeitabschnittDTO RecordBuilder by copying an existing ZeitabschnittDTO instance.
   * @param other The existing instance to copy.
   * @return A new ZeitabschnittDTO RecordBuilder
   */
  public static ch.dvbern.kibon.exchange.commons.verfuegung.ZeitabschnittDTO.Builder newBuilder(ch.dvbern.kibon.exchange.commons.verfuegung.ZeitabschnittDTO other) {
    if (other == null) {
      return new ch.dvbern.kibon.exchange.commons.verfuegung.ZeitabschnittDTO.Builder();
    } else {
      return new ch.dvbern.kibon.exchange.commons.verfuegung.ZeitabschnittDTO.Builder(other);
    }
  }

  /**
   * RecordBuilder for ZeitabschnittDTO instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ZeitabschnittDTO>
    implements org.apache.avro.data.RecordBuilder<ZeitabschnittDTO> {

    private java.time.LocalDate von;
    private java.time.LocalDate bis;
    private int verfuegungNr;
    private java.math.BigDecimal effektiveBetreuungPct;
    private int anspruchPct;
    private java.math.BigDecimal verguenstigtPct;
    private java.math.BigDecimal vollkosten;
    private java.math.BigDecimal betreuungsgutschein;
    private java.math.BigDecimal minimalerElternbeitrag;
    private java.math.BigDecimal verguenstigung;
    private java.math.BigDecimal verfuegteAnzahlZeiteinheiten;
    private java.math.BigDecimal anspruchsberechtigteAnzahlZeiteinheiten;
    private ch.dvbern.kibon.exchange.commons.types.Zeiteinheit zeiteinheit;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(ch.dvbern.kibon.exchange.commons.verfuegung.ZeitabschnittDTO.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.von)) {
        this.von = data().deepCopy(fields()[0].schema(), other.von);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.bis)) {
        this.bis = data().deepCopy(fields()[1].schema(), other.bis);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.verfuegungNr)) {
        this.verfuegungNr = data().deepCopy(fields()[2].schema(), other.verfuegungNr);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.effektiveBetreuungPct)) {
        this.effektiveBetreuungPct = data().deepCopy(fields()[3].schema(), other.effektiveBetreuungPct);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.anspruchPct)) {
        this.anspruchPct = data().deepCopy(fields()[4].schema(), other.anspruchPct);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.verguenstigtPct)) {
        this.verguenstigtPct = data().deepCopy(fields()[5].schema(), other.verguenstigtPct);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.vollkosten)) {
        this.vollkosten = data().deepCopy(fields()[6].schema(), other.vollkosten);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.betreuungsgutschein)) {
        this.betreuungsgutschein = data().deepCopy(fields()[7].schema(), other.betreuungsgutschein);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.minimalerElternbeitrag)) {
        this.minimalerElternbeitrag = data().deepCopy(fields()[8].schema(), other.minimalerElternbeitrag);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.verguenstigung)) {
        this.verguenstigung = data().deepCopy(fields()[9].schema(), other.verguenstigung);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.verfuegteAnzahlZeiteinheiten)) {
        this.verfuegteAnzahlZeiteinheiten = data().deepCopy(fields()[10].schema(), other.verfuegteAnzahlZeiteinheiten);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.anspruchsberechtigteAnzahlZeiteinheiten)) {
        this.anspruchsberechtigteAnzahlZeiteinheiten = data().deepCopy(fields()[11].schema(), other.anspruchsberechtigteAnzahlZeiteinheiten);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.zeiteinheit)) {
        this.zeiteinheit = data().deepCopy(fields()[12].schema(), other.zeiteinheit);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
    }

    /**
     * Creates a Builder by copying an existing ZeitabschnittDTO instance
     * @param other The existing instance to copy.
     */
    private Builder(ch.dvbern.kibon.exchange.commons.verfuegung.ZeitabschnittDTO other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.von)) {
        this.von = data().deepCopy(fields()[0].schema(), other.von);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.bis)) {
        this.bis = data().deepCopy(fields()[1].schema(), other.bis);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.verfuegungNr)) {
        this.verfuegungNr = data().deepCopy(fields()[2].schema(), other.verfuegungNr);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.effektiveBetreuungPct)) {
        this.effektiveBetreuungPct = data().deepCopy(fields()[3].schema(), other.effektiveBetreuungPct);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.anspruchPct)) {
        this.anspruchPct = data().deepCopy(fields()[4].schema(), other.anspruchPct);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.verguenstigtPct)) {
        this.verguenstigtPct = data().deepCopy(fields()[5].schema(), other.verguenstigtPct);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.vollkosten)) {
        this.vollkosten = data().deepCopy(fields()[6].schema(), other.vollkosten);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.betreuungsgutschein)) {
        this.betreuungsgutschein = data().deepCopy(fields()[7].schema(), other.betreuungsgutschein);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.minimalerElternbeitrag)) {
        this.minimalerElternbeitrag = data().deepCopy(fields()[8].schema(), other.minimalerElternbeitrag);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.verguenstigung)) {
        this.verguenstigung = data().deepCopy(fields()[9].schema(), other.verguenstigung);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.verfuegteAnzahlZeiteinheiten)) {
        this.verfuegteAnzahlZeiteinheiten = data().deepCopy(fields()[10].schema(), other.verfuegteAnzahlZeiteinheiten);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.anspruchsberechtigteAnzahlZeiteinheiten)) {
        this.anspruchsberechtigteAnzahlZeiteinheiten = data().deepCopy(fields()[11].schema(), other.anspruchsberechtigteAnzahlZeiteinheiten);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.zeiteinheit)) {
        this.zeiteinheit = data().deepCopy(fields()[12].schema(), other.zeiteinheit);
        fieldSetFlags()[12] = true;
      }
    }

    /**
      * Gets the value of the 'von' field.
      * @return The value.
      */
    public java.time.LocalDate getVon() {
      return von;
    }


    /**
      * Sets the value of the 'von' field.
      * @param value The value of 'von'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.verfuegung.ZeitabschnittDTO.Builder setVon(java.time.LocalDate value) {
      validate(fields()[0], value);
      this.von = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'von' field has been set.
      * @return True if the 'von' field has been set, false otherwise.
      */
    public boolean hasVon() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'von' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.verfuegung.ZeitabschnittDTO.Builder clearVon() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'bis' field.
      * @return The value.
      */
    public java.time.LocalDate getBis() {
      return bis;
    }


    /**
      * Sets the value of the 'bis' field.
      * @param value The value of 'bis'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.verfuegung.ZeitabschnittDTO.Builder setBis(java.time.LocalDate value) {
      validate(fields()[1], value);
      this.bis = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'bis' field has been set.
      * @return True if the 'bis' field has been set, false otherwise.
      */
    public boolean hasBis() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'bis' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.verfuegung.ZeitabschnittDTO.Builder clearBis() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'verfuegungNr' field.
      * @return The value.
      */
    public int getVerfuegungNr() {
      return verfuegungNr;
    }


    /**
      * Sets the value of the 'verfuegungNr' field.
      * @param value The value of 'verfuegungNr'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.verfuegung.ZeitabschnittDTO.Builder setVerfuegungNr(int value) {
      validate(fields()[2], value);
      this.verfuegungNr = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'verfuegungNr' field has been set.
      * @return True if the 'verfuegungNr' field has been set, false otherwise.
      */
    public boolean hasVerfuegungNr() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'verfuegungNr' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.verfuegung.ZeitabschnittDTO.Builder clearVerfuegungNr() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'effektiveBetreuungPct' field.
      * @return The value.
      */
    public java.math.BigDecimal getEffektiveBetreuungPct() {
      return effektiveBetreuungPct;
    }


    /**
      * Sets the value of the 'effektiveBetreuungPct' field.
      * @param value The value of 'effektiveBetreuungPct'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.verfuegung.ZeitabschnittDTO.Builder setEffektiveBetreuungPct(java.math.BigDecimal value) {
      validate(fields()[3], value);
      this.effektiveBetreuungPct = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'effektiveBetreuungPct' field has been set.
      * @return True if the 'effektiveBetreuungPct' field has been set, false otherwise.
      */
    public boolean hasEffektiveBetreuungPct() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'effektiveBetreuungPct' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.verfuegung.ZeitabschnittDTO.Builder clearEffektiveBetreuungPct() {
      effektiveBetreuungPct = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'anspruchPct' field.
      * @return The value.
      */
    public int getAnspruchPct() {
      return anspruchPct;
    }


    /**
      * Sets the value of the 'anspruchPct' field.
      * @param value The value of 'anspruchPct'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.verfuegung.ZeitabschnittDTO.Builder setAnspruchPct(int value) {
      validate(fields()[4], value);
      this.anspruchPct = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'anspruchPct' field has been set.
      * @return True if the 'anspruchPct' field has been set, false otherwise.
      */
    public boolean hasAnspruchPct() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'anspruchPct' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.verfuegung.ZeitabschnittDTO.Builder clearAnspruchPct() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'verguenstigtPct' field.
      * @return The value.
      */
    public java.math.BigDecimal getVerguenstigtPct() {
      return verguenstigtPct;
    }


    /**
      * Sets the value of the 'verguenstigtPct' field.
      * @param value The value of 'verguenstigtPct'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.verfuegung.ZeitabschnittDTO.Builder setVerguenstigtPct(java.math.BigDecimal value) {
      validate(fields()[5], value);
      this.verguenstigtPct = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'verguenstigtPct' field has been set.
      * @return True if the 'verguenstigtPct' field has been set, false otherwise.
      */
    public boolean hasVerguenstigtPct() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'verguenstigtPct' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.verfuegung.ZeitabschnittDTO.Builder clearVerguenstigtPct() {
      verguenstigtPct = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'vollkosten' field.
      * @return The value.
      */
    public java.math.BigDecimal getVollkosten() {
      return vollkosten;
    }


    /**
      * Sets the value of the 'vollkosten' field.
      * @param value The value of 'vollkosten'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.verfuegung.ZeitabschnittDTO.Builder setVollkosten(java.math.BigDecimal value) {
      validate(fields()[6], value);
      this.vollkosten = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'vollkosten' field has been set.
      * @return True if the 'vollkosten' field has been set, false otherwise.
      */
    public boolean hasVollkosten() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'vollkosten' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.verfuegung.ZeitabschnittDTO.Builder clearVollkosten() {
      vollkosten = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'betreuungsgutschein' field.
      * @return The value.
      */
    public java.math.BigDecimal getBetreuungsgutschein() {
      return betreuungsgutschein;
    }


    /**
      * Sets the value of the 'betreuungsgutschein' field.
      * @param value The value of 'betreuungsgutschein'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.verfuegung.ZeitabschnittDTO.Builder setBetreuungsgutschein(java.math.BigDecimal value) {
      validate(fields()[7], value);
      this.betreuungsgutschein = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'betreuungsgutschein' field has been set.
      * @return True if the 'betreuungsgutschein' field has been set, false otherwise.
      */
    public boolean hasBetreuungsgutschein() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'betreuungsgutschein' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.verfuegung.ZeitabschnittDTO.Builder clearBetreuungsgutschein() {
      betreuungsgutschein = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'minimalerElternbeitrag' field.
      * @return The value.
      */
    public java.math.BigDecimal getMinimalerElternbeitrag() {
      return minimalerElternbeitrag;
    }


    /**
      * Sets the value of the 'minimalerElternbeitrag' field.
      * @param value The value of 'minimalerElternbeitrag'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.verfuegung.ZeitabschnittDTO.Builder setMinimalerElternbeitrag(java.math.BigDecimal value) {
      validate(fields()[8], value);
      this.minimalerElternbeitrag = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'minimalerElternbeitrag' field has been set.
      * @return True if the 'minimalerElternbeitrag' field has been set, false otherwise.
      */
    public boolean hasMinimalerElternbeitrag() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'minimalerElternbeitrag' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.verfuegung.ZeitabschnittDTO.Builder clearMinimalerElternbeitrag() {
      minimalerElternbeitrag = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'verguenstigung' field.
      * @return The value.
      */
    public java.math.BigDecimal getVerguenstigung() {
      return verguenstigung;
    }


    /**
      * Sets the value of the 'verguenstigung' field.
      * @param value The value of 'verguenstigung'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.verfuegung.ZeitabschnittDTO.Builder setVerguenstigung(java.math.BigDecimal value) {
      validate(fields()[9], value);
      this.verguenstigung = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'verguenstigung' field has been set.
      * @return True if the 'verguenstigung' field has been set, false otherwise.
      */
    public boolean hasVerguenstigung() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'verguenstigung' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.verfuegung.ZeitabschnittDTO.Builder clearVerguenstigung() {
      verguenstigung = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'verfuegteAnzahlZeiteinheiten' field.
      * @return The value.
      */
    public java.math.BigDecimal getVerfuegteAnzahlZeiteinheiten() {
      return verfuegteAnzahlZeiteinheiten;
    }


    /**
      * Sets the value of the 'verfuegteAnzahlZeiteinheiten' field.
      * @param value The value of 'verfuegteAnzahlZeiteinheiten'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.verfuegung.ZeitabschnittDTO.Builder setVerfuegteAnzahlZeiteinheiten(java.math.BigDecimal value) {
      validate(fields()[10], value);
      this.verfuegteAnzahlZeiteinheiten = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'verfuegteAnzahlZeiteinheiten' field has been set.
      * @return True if the 'verfuegteAnzahlZeiteinheiten' field has been set, false otherwise.
      */
    public boolean hasVerfuegteAnzahlZeiteinheiten() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'verfuegteAnzahlZeiteinheiten' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.verfuegung.ZeitabschnittDTO.Builder clearVerfuegteAnzahlZeiteinheiten() {
      verfuegteAnzahlZeiteinheiten = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'anspruchsberechtigteAnzahlZeiteinheiten' field.
      * @return The value.
      */
    public java.math.BigDecimal getAnspruchsberechtigteAnzahlZeiteinheiten() {
      return anspruchsberechtigteAnzahlZeiteinheiten;
    }


    /**
      * Sets the value of the 'anspruchsberechtigteAnzahlZeiteinheiten' field.
      * @param value The value of 'anspruchsberechtigteAnzahlZeiteinheiten'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.verfuegung.ZeitabschnittDTO.Builder setAnspruchsberechtigteAnzahlZeiteinheiten(java.math.BigDecimal value) {
      validate(fields()[11], value);
      this.anspruchsberechtigteAnzahlZeiteinheiten = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'anspruchsberechtigteAnzahlZeiteinheiten' field has been set.
      * @return True if the 'anspruchsberechtigteAnzahlZeiteinheiten' field has been set, false otherwise.
      */
    public boolean hasAnspruchsberechtigteAnzahlZeiteinheiten() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'anspruchsberechtigteAnzahlZeiteinheiten' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.verfuegung.ZeitabschnittDTO.Builder clearAnspruchsberechtigteAnzahlZeiteinheiten() {
      anspruchsberechtigteAnzahlZeiteinheiten = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'zeiteinheit' field.
      * @return The value.
      */
    public ch.dvbern.kibon.exchange.commons.types.Zeiteinheit getZeiteinheit() {
      return zeiteinheit;
    }


    /**
      * Sets the value of the 'zeiteinheit' field.
      * @param value The value of 'zeiteinheit'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.verfuegung.ZeitabschnittDTO.Builder setZeiteinheit(ch.dvbern.kibon.exchange.commons.types.Zeiteinheit value) {
      validate(fields()[12], value);
      this.zeiteinheit = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'zeiteinheit' field has been set.
      * @return True if the 'zeiteinheit' field has been set, false otherwise.
      */
    public boolean hasZeiteinheit() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'zeiteinheit' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.verfuegung.ZeitabschnittDTO.Builder clearZeiteinheit() {
      zeiteinheit = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ZeitabschnittDTO build() {
      try {
        ZeitabschnittDTO record = new ZeitabschnittDTO();
        record.von = fieldSetFlags()[0] ? this.von : (java.time.LocalDate) defaultValue(fields()[0]);
        record.bis = fieldSetFlags()[1] ? this.bis : (java.time.LocalDate) defaultValue(fields()[1]);
        record.verfuegungNr = fieldSetFlags()[2] ? this.verfuegungNr : (java.lang.Integer) defaultValue(fields()[2]);
        record.effektiveBetreuungPct = fieldSetFlags()[3] ? this.effektiveBetreuungPct : (java.math.BigDecimal) defaultValue(fields()[3]);
        record.anspruchPct = fieldSetFlags()[4] ? this.anspruchPct : (java.lang.Integer) defaultValue(fields()[4]);
        record.verguenstigtPct = fieldSetFlags()[5] ? this.verguenstigtPct : (java.math.BigDecimal) defaultValue(fields()[5]);
        record.vollkosten = fieldSetFlags()[6] ? this.vollkosten : (java.math.BigDecimal) defaultValue(fields()[6]);
        record.betreuungsgutschein = fieldSetFlags()[7] ? this.betreuungsgutschein : (java.math.BigDecimal) defaultValue(fields()[7]);
        record.minimalerElternbeitrag = fieldSetFlags()[8] ? this.minimalerElternbeitrag : (java.math.BigDecimal) defaultValue(fields()[8]);
        record.verguenstigung = fieldSetFlags()[9] ? this.verguenstigung : (java.math.BigDecimal) defaultValue(fields()[9]);
        record.verfuegteAnzahlZeiteinheiten = fieldSetFlags()[10] ? this.verfuegteAnzahlZeiteinheiten : (java.math.BigDecimal) defaultValue(fields()[10]);
        record.anspruchsberechtigteAnzahlZeiteinheiten = fieldSetFlags()[11] ? this.anspruchsberechtigteAnzahlZeiteinheiten : (java.math.BigDecimal) defaultValue(fields()[11]);
        record.zeiteinheit = fieldSetFlags()[12] ? this.zeiteinheit : (ch.dvbern.kibon.exchange.commons.types.Zeiteinheit) defaultValue(fields()[12]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ZeitabschnittDTO>
    WRITER$ = (org.apache.avro.io.DatumWriter<ZeitabschnittDTO>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ZeitabschnittDTO>
    READER$ = (org.apache.avro.io.DatumReader<ZeitabschnittDTO>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










