/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package ch.dvbern.kibon.exchange.commons.tagesschulen;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class TagesschuleAnmeldungEventDTO extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -6363984125770265055L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TagesschuleAnmeldungEventDTO\",\"namespace\":\"ch.dvbern.kibon.exchange.commons.tagesschulen\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"institutionId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"refnr\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"freigegebenAm\",\"type\":{\"type\":\"int\",\"logicalType\":\"date\"}},{\"name\":\"gesuchsperiode\",\"type\":{\"type\":\"record\",\"name\":\"Gesuchsperiode\",\"namespace\":\"ch.dvbern.kibon.exchange.commons.types\",\"fields\":[{\"name\":\"gueltigAb\",\"type\":{\"type\":\"int\",\"logicalType\":\"date\"}},{\"name\":\"gueltigBis\",\"type\":{\"type\":\"int\",\"logicalType\":\"date\"}}]}},{\"name\":\"eintrittsdatum\",\"type\":{\"type\":\"int\",\"logicalType\":\"date\"}},{\"name\":\"planKlasse\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"abholung\",\"type\":{\"type\":\"enum\",\"name\":\"AbholungTagesschule\",\"symbols\":[\"ABHOLUNG\",\"ALLEINE_NACH_HAUSE\"]}},{\"name\":\"abweichungZweitesSemester\",\"type\":\"boolean\"},{\"name\":\"bemerkung\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"kind\",\"type\":{\"type\":\"record\",\"name\":\"KindDTO\",\"namespace\":\"ch.dvbern.kibon.exchange.commons.verfuegung\",\"fields\":[{\"name\":\"vorname\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"nachname\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"geburtsdatum\",\"type\":{\"type\":\"int\",\"logicalType\":\"date\"}},{\"name\":\"geschlecht\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"Geschlecht\",\"namespace\":\"ch.dvbern.kibon.exchange.commons.types\",\"symbols\":[\"WEIBLICH\",\"MAENNLICH\"]}],\"default\":null}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();
static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.DateConversion());
  }

  private static final BinaryMessageEncoder<TagesschuleAnmeldungEventDTO> ENCODER =
      new BinaryMessageEncoder<TagesschuleAnmeldungEventDTO>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<TagesschuleAnmeldungEventDTO> DECODER =
      new BinaryMessageDecoder<TagesschuleAnmeldungEventDTO>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<TagesschuleAnmeldungEventDTO> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<TagesschuleAnmeldungEventDTO> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<TagesschuleAnmeldungEventDTO> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<TagesschuleAnmeldungEventDTO>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this TagesschuleAnmeldungEventDTO to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a TagesschuleAnmeldungEventDTO from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a TagesschuleAnmeldungEventDTO instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static TagesschuleAnmeldungEventDTO fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.String id;
   private java.lang.String institutionId;
   private java.lang.String refnr;
   private int version;
   private java.time.LocalDate freigegebenAm;
   private ch.dvbern.kibon.exchange.commons.types.Gesuchsperiode gesuchsperiode;
   private java.time.LocalDate eintrittsdatum;
   private java.lang.String planKlasse;
   private ch.dvbern.kibon.exchange.commons.tagesschulen.AbholungTagesschule abholung;
   private boolean abweichungZweitesSemester;
   private java.lang.String bemerkung;
   private ch.dvbern.kibon.exchange.commons.verfuegung.KindDTO kind;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public TagesschuleAnmeldungEventDTO() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param institutionId The new value for institutionId
   * @param refnr The new value for refnr
   * @param version The new value for version
   * @param freigegebenAm The new value for freigegebenAm
   * @param gesuchsperiode The new value for gesuchsperiode
   * @param eintrittsdatum The new value for eintrittsdatum
   * @param planKlasse The new value for planKlasse
   * @param abholung The new value for abholung
   * @param abweichungZweitesSemester The new value for abweichungZweitesSemester
   * @param bemerkung The new value for bemerkung
   * @param kind The new value for kind
   */
  public TagesschuleAnmeldungEventDTO(java.lang.String id, java.lang.String institutionId, java.lang.String refnr, java.lang.Integer version, java.time.LocalDate freigegebenAm, ch.dvbern.kibon.exchange.commons.types.Gesuchsperiode gesuchsperiode, java.time.LocalDate eintrittsdatum, java.lang.String planKlasse, ch.dvbern.kibon.exchange.commons.tagesschulen.AbholungTagesschule abholung, java.lang.Boolean abweichungZweitesSemester, java.lang.String bemerkung, ch.dvbern.kibon.exchange.commons.verfuegung.KindDTO kind) {
    this.id = id;
    this.institutionId = institutionId;
    this.refnr = refnr;
    this.version = version;
    this.freigegebenAm = freigegebenAm;
    this.gesuchsperiode = gesuchsperiode;
    this.eintrittsdatum = eintrittsdatum;
    this.planKlasse = planKlasse;
    this.abholung = abholung;
    this.abweichungZweitesSemester = abweichungZweitesSemester;
    this.bemerkung = bemerkung;
    this.kind = kind;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return institutionId;
    case 2: return refnr;
    case 3: return version;
    case 4: return freigegebenAm;
    case 5: return gesuchsperiode;
    case 6: return eintrittsdatum;
    case 7: return planKlasse;
    case 8: return abholung;
    case 9: return abweichungZweitesSemester;
    case 10: return bemerkung;
    case 11: return kind;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      null,
      null,
      null,
      new org.apache.avro.data.TimeConversions.DateConversion(),
      null,
      new org.apache.avro.data.TimeConversions.DateConversion(),
      null,
      null,
      null,
      null,
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = value$ != null ? value$.toString() : null; break;
    case 1: institutionId = value$ != null ? value$.toString() : null; break;
    case 2: refnr = value$ != null ? value$.toString() : null; break;
    case 3: version = (java.lang.Integer)value$; break;
    case 4: freigegebenAm = (java.time.LocalDate)value$; break;
    case 5: gesuchsperiode = (ch.dvbern.kibon.exchange.commons.types.Gesuchsperiode)value$; break;
    case 6: eintrittsdatum = (java.time.LocalDate)value$; break;
    case 7: planKlasse = value$ != null ? value$.toString() : null; break;
    case 8: abholung = (ch.dvbern.kibon.exchange.commons.tagesschulen.AbholungTagesschule)value$; break;
    case 9: abweichungZweitesSemester = (java.lang.Boolean)value$; break;
    case 10: bemerkung = value$ != null ? value$.toString() : null; break;
    case 11: kind = (ch.dvbern.kibon.exchange.commons.verfuegung.KindDTO)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.String getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.String value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'institutionId' field.
   * @return The value of the 'institutionId' field.
   */
  public java.lang.String getInstitutionId() {
    return institutionId;
  }


  /**
   * Sets the value of the 'institutionId' field.
   * @param value the value to set.
   */
  public void setInstitutionId(java.lang.String value) {
    this.institutionId = value;
  }

  /**
   * Gets the value of the 'refnr' field.
   * @return The value of the 'refnr' field.
   */
  public java.lang.String getRefnr() {
    return refnr;
  }


  /**
   * Sets the value of the 'refnr' field.
   * @param value the value to set.
   */
  public void setRefnr(java.lang.String value) {
    this.refnr = value;
  }

  /**
   * Gets the value of the 'version' field.
   * @return The value of the 'version' field.
   */
  public int getVersion() {
    return version;
  }


  /**
   * Sets the value of the 'version' field.
   * @param value the value to set.
   */
  public void setVersion(int value) {
    this.version = value;
  }

  /**
   * Gets the value of the 'freigegebenAm' field.
   * @return The value of the 'freigegebenAm' field.
   */
  public java.time.LocalDate getFreigegebenAm() {
    return freigegebenAm;
  }


  /**
   * Sets the value of the 'freigegebenAm' field.
   * @param value the value to set.
   */
  public void setFreigegebenAm(java.time.LocalDate value) {
    this.freigegebenAm = value;
  }

  /**
   * Gets the value of the 'gesuchsperiode' field.
   * @return The value of the 'gesuchsperiode' field.
   */
  public ch.dvbern.kibon.exchange.commons.types.Gesuchsperiode getGesuchsperiode() {
    return gesuchsperiode;
  }


  /**
   * Sets the value of the 'gesuchsperiode' field.
   * @param value the value to set.
   */
  public void setGesuchsperiode(ch.dvbern.kibon.exchange.commons.types.Gesuchsperiode value) {
    this.gesuchsperiode = value;
  }

  /**
   * Gets the value of the 'eintrittsdatum' field.
   * @return The value of the 'eintrittsdatum' field.
   */
  public java.time.LocalDate getEintrittsdatum() {
    return eintrittsdatum;
  }


  /**
   * Sets the value of the 'eintrittsdatum' field.
   * @param value the value to set.
   */
  public void setEintrittsdatum(java.time.LocalDate value) {
    this.eintrittsdatum = value;
  }

  /**
   * Gets the value of the 'planKlasse' field.
   * @return The value of the 'planKlasse' field.
   */
  public java.lang.String getPlanKlasse() {
    return planKlasse;
  }


  /**
   * Sets the value of the 'planKlasse' field.
   * @param value the value to set.
   */
  public void setPlanKlasse(java.lang.String value) {
    this.planKlasse = value;
  }

  /**
   * Gets the value of the 'abholung' field.
   * @return The value of the 'abholung' field.
   */
  public ch.dvbern.kibon.exchange.commons.tagesschulen.AbholungTagesschule getAbholung() {
    return abholung;
  }


  /**
   * Sets the value of the 'abholung' field.
   * @param value the value to set.
   */
  public void setAbholung(ch.dvbern.kibon.exchange.commons.tagesschulen.AbholungTagesschule value) {
    this.abholung = value;
  }

  /**
   * Gets the value of the 'abweichungZweitesSemester' field.
   * @return The value of the 'abweichungZweitesSemester' field.
   */
  public boolean getAbweichungZweitesSemester() {
    return abweichungZweitesSemester;
  }


  /**
   * Sets the value of the 'abweichungZweitesSemester' field.
   * @param value the value to set.
   */
  public void setAbweichungZweitesSemester(boolean value) {
    this.abweichungZweitesSemester = value;
  }

  /**
   * Gets the value of the 'bemerkung' field.
   * @return The value of the 'bemerkung' field.
   */
  public java.lang.String getBemerkung() {
    return bemerkung;
  }


  /**
   * Sets the value of the 'bemerkung' field.
   * @param value the value to set.
   */
  public void setBemerkung(java.lang.String value) {
    this.bemerkung = value;
  }

  /**
   * Gets the value of the 'kind' field.
   * @return The value of the 'kind' field.
   */
  public ch.dvbern.kibon.exchange.commons.verfuegung.KindDTO getKind() {
    return kind;
  }


  /**
   * Sets the value of the 'kind' field.
   * @param value the value to set.
   */
  public void setKind(ch.dvbern.kibon.exchange.commons.verfuegung.KindDTO value) {
    this.kind = value;
  }

  /**
   * Creates a new TagesschuleAnmeldungEventDTO RecordBuilder.
   * @return A new TagesschuleAnmeldungEventDTO RecordBuilder
   */
  public static ch.dvbern.kibon.exchange.commons.tagesschulen.TagesschuleAnmeldungEventDTO.Builder newBuilder() {
    return new ch.dvbern.kibon.exchange.commons.tagesschulen.TagesschuleAnmeldungEventDTO.Builder();
  }

  /**
   * Creates a new TagesschuleAnmeldungEventDTO RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new TagesschuleAnmeldungEventDTO RecordBuilder
   */
  public static ch.dvbern.kibon.exchange.commons.tagesschulen.TagesschuleAnmeldungEventDTO.Builder newBuilder(ch.dvbern.kibon.exchange.commons.tagesschulen.TagesschuleAnmeldungEventDTO.Builder other) {
    if (other == null) {
      return new ch.dvbern.kibon.exchange.commons.tagesschulen.TagesschuleAnmeldungEventDTO.Builder();
    } else {
      return new ch.dvbern.kibon.exchange.commons.tagesschulen.TagesschuleAnmeldungEventDTO.Builder(other);
    }
  }

  /**
   * Creates a new TagesschuleAnmeldungEventDTO RecordBuilder by copying an existing TagesschuleAnmeldungEventDTO instance.
   * @param other The existing instance to copy.
   * @return A new TagesschuleAnmeldungEventDTO RecordBuilder
   */
  public static ch.dvbern.kibon.exchange.commons.tagesschulen.TagesschuleAnmeldungEventDTO.Builder newBuilder(ch.dvbern.kibon.exchange.commons.tagesschulen.TagesschuleAnmeldungEventDTO other) {
    if (other == null) {
      return new ch.dvbern.kibon.exchange.commons.tagesschulen.TagesschuleAnmeldungEventDTO.Builder();
    } else {
      return new ch.dvbern.kibon.exchange.commons.tagesschulen.TagesschuleAnmeldungEventDTO.Builder(other);
    }
  }

  /**
   * RecordBuilder for TagesschuleAnmeldungEventDTO instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TagesschuleAnmeldungEventDTO>
    implements org.apache.avro.data.RecordBuilder<TagesschuleAnmeldungEventDTO> {

    private java.lang.String id;
    private java.lang.String institutionId;
    private java.lang.String refnr;
    private int version;
    private java.time.LocalDate freigegebenAm;
    private ch.dvbern.kibon.exchange.commons.types.Gesuchsperiode gesuchsperiode;
    private ch.dvbern.kibon.exchange.commons.types.Gesuchsperiode.Builder gesuchsperiodeBuilder;
    private java.time.LocalDate eintrittsdatum;
    private java.lang.String planKlasse;
    private ch.dvbern.kibon.exchange.commons.tagesschulen.AbholungTagesschule abholung;
    private boolean abweichungZweitesSemester;
    private java.lang.String bemerkung;
    private ch.dvbern.kibon.exchange.commons.verfuegung.KindDTO kind;
    private ch.dvbern.kibon.exchange.commons.verfuegung.KindDTO.Builder kindBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(ch.dvbern.kibon.exchange.commons.tagesschulen.TagesschuleAnmeldungEventDTO.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.institutionId)) {
        this.institutionId = data().deepCopy(fields()[1].schema(), other.institutionId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.refnr)) {
        this.refnr = data().deepCopy(fields()[2].schema(), other.refnr);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.version)) {
        this.version = data().deepCopy(fields()[3].schema(), other.version);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.freigegebenAm)) {
        this.freigegebenAm = data().deepCopy(fields()[4].schema(), other.freigegebenAm);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.gesuchsperiode)) {
        this.gesuchsperiode = data().deepCopy(fields()[5].schema(), other.gesuchsperiode);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (other.hasGesuchsperiodeBuilder()) {
        this.gesuchsperiodeBuilder = ch.dvbern.kibon.exchange.commons.types.Gesuchsperiode.newBuilder(other.getGesuchsperiodeBuilder());
      }
      if (isValidValue(fields()[6], other.eintrittsdatum)) {
        this.eintrittsdatum = data().deepCopy(fields()[6].schema(), other.eintrittsdatum);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.planKlasse)) {
        this.planKlasse = data().deepCopy(fields()[7].schema(), other.planKlasse);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.abholung)) {
        this.abholung = data().deepCopy(fields()[8].schema(), other.abholung);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.abweichungZweitesSemester)) {
        this.abweichungZweitesSemester = data().deepCopy(fields()[9].schema(), other.abweichungZweitesSemester);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.bemerkung)) {
        this.bemerkung = data().deepCopy(fields()[10].schema(), other.bemerkung);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.kind)) {
        this.kind = data().deepCopy(fields()[11].schema(), other.kind);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (other.hasKindBuilder()) {
        this.kindBuilder = ch.dvbern.kibon.exchange.commons.verfuegung.KindDTO.newBuilder(other.getKindBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing TagesschuleAnmeldungEventDTO instance
     * @param other The existing instance to copy.
     */
    private Builder(ch.dvbern.kibon.exchange.commons.tagesschulen.TagesschuleAnmeldungEventDTO other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.institutionId)) {
        this.institutionId = data().deepCopy(fields()[1].schema(), other.institutionId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.refnr)) {
        this.refnr = data().deepCopy(fields()[2].schema(), other.refnr);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.version)) {
        this.version = data().deepCopy(fields()[3].schema(), other.version);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.freigegebenAm)) {
        this.freigegebenAm = data().deepCopy(fields()[4].schema(), other.freigegebenAm);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.gesuchsperiode)) {
        this.gesuchsperiode = data().deepCopy(fields()[5].schema(), other.gesuchsperiode);
        fieldSetFlags()[5] = true;
      }
      this.gesuchsperiodeBuilder = null;
      if (isValidValue(fields()[6], other.eintrittsdatum)) {
        this.eintrittsdatum = data().deepCopy(fields()[6].schema(), other.eintrittsdatum);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.planKlasse)) {
        this.planKlasse = data().deepCopy(fields()[7].schema(), other.planKlasse);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.abholung)) {
        this.abholung = data().deepCopy(fields()[8].schema(), other.abholung);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.abweichungZweitesSemester)) {
        this.abweichungZweitesSemester = data().deepCopy(fields()[9].schema(), other.abweichungZweitesSemester);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.bemerkung)) {
        this.bemerkung = data().deepCopy(fields()[10].schema(), other.bemerkung);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.kind)) {
        this.kind = data().deepCopy(fields()[11].schema(), other.kind);
        fieldSetFlags()[11] = true;
      }
      this.kindBuilder = null;
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.String getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.TagesschuleAnmeldungEventDTO.Builder setId(java.lang.String value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.TagesschuleAnmeldungEventDTO.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'institutionId' field.
      * @return The value.
      */
    public java.lang.String getInstitutionId() {
      return institutionId;
    }


    /**
      * Sets the value of the 'institutionId' field.
      * @param value The value of 'institutionId'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.TagesschuleAnmeldungEventDTO.Builder setInstitutionId(java.lang.String value) {
      validate(fields()[1], value);
      this.institutionId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'institutionId' field has been set.
      * @return True if the 'institutionId' field has been set, false otherwise.
      */
    public boolean hasInstitutionId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'institutionId' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.TagesschuleAnmeldungEventDTO.Builder clearInstitutionId() {
      institutionId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'refnr' field.
      * @return The value.
      */
    public java.lang.String getRefnr() {
      return refnr;
    }


    /**
      * Sets the value of the 'refnr' field.
      * @param value The value of 'refnr'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.TagesschuleAnmeldungEventDTO.Builder setRefnr(java.lang.String value) {
      validate(fields()[2], value);
      this.refnr = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'refnr' field has been set.
      * @return True if the 'refnr' field has been set, false otherwise.
      */
    public boolean hasRefnr() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'refnr' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.TagesschuleAnmeldungEventDTO.Builder clearRefnr() {
      refnr = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'version' field.
      * @return The value.
      */
    public int getVersion() {
      return version;
    }


    /**
      * Sets the value of the 'version' field.
      * @param value The value of 'version'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.TagesschuleAnmeldungEventDTO.Builder setVersion(int value) {
      validate(fields()[3], value);
      this.version = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'version' field has been set.
      * @return True if the 'version' field has been set, false otherwise.
      */
    public boolean hasVersion() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'version' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.TagesschuleAnmeldungEventDTO.Builder clearVersion() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'freigegebenAm' field.
      * @return The value.
      */
    public java.time.LocalDate getFreigegebenAm() {
      return freigegebenAm;
    }


    /**
      * Sets the value of the 'freigegebenAm' field.
      * @param value The value of 'freigegebenAm'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.TagesschuleAnmeldungEventDTO.Builder setFreigegebenAm(java.time.LocalDate value) {
      validate(fields()[4], value);
      this.freigegebenAm = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'freigegebenAm' field has been set.
      * @return True if the 'freigegebenAm' field has been set, false otherwise.
      */
    public boolean hasFreigegebenAm() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'freigegebenAm' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.TagesschuleAnmeldungEventDTO.Builder clearFreigegebenAm() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'gesuchsperiode' field.
      * @return The value.
      */
    public ch.dvbern.kibon.exchange.commons.types.Gesuchsperiode getGesuchsperiode() {
      return gesuchsperiode;
    }


    /**
      * Sets the value of the 'gesuchsperiode' field.
      * @param value The value of 'gesuchsperiode'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.TagesschuleAnmeldungEventDTO.Builder setGesuchsperiode(ch.dvbern.kibon.exchange.commons.types.Gesuchsperiode value) {
      validate(fields()[5], value);
      this.gesuchsperiodeBuilder = null;
      this.gesuchsperiode = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'gesuchsperiode' field has been set.
      * @return True if the 'gesuchsperiode' field has been set, false otherwise.
      */
    public boolean hasGesuchsperiode() {
      return fieldSetFlags()[5];
    }

    /**
     * Gets the Builder instance for the 'gesuchsperiode' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public ch.dvbern.kibon.exchange.commons.types.Gesuchsperiode.Builder getGesuchsperiodeBuilder() {
      if (gesuchsperiodeBuilder == null) {
        if (hasGesuchsperiode()) {
          setGesuchsperiodeBuilder(ch.dvbern.kibon.exchange.commons.types.Gesuchsperiode.newBuilder(gesuchsperiode));
        } else {
          setGesuchsperiodeBuilder(ch.dvbern.kibon.exchange.commons.types.Gesuchsperiode.newBuilder());
        }
      }
      return gesuchsperiodeBuilder;
    }

    /**
     * Sets the Builder instance for the 'gesuchsperiode' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.TagesschuleAnmeldungEventDTO.Builder setGesuchsperiodeBuilder(ch.dvbern.kibon.exchange.commons.types.Gesuchsperiode.Builder value) {
      clearGesuchsperiode();
      gesuchsperiodeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'gesuchsperiode' field has an active Builder instance
     * @return True if the 'gesuchsperiode' field has an active Builder instance
     */
    public boolean hasGesuchsperiodeBuilder() {
      return gesuchsperiodeBuilder != null;
    }

    /**
      * Clears the value of the 'gesuchsperiode' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.TagesschuleAnmeldungEventDTO.Builder clearGesuchsperiode() {
      gesuchsperiode = null;
      gesuchsperiodeBuilder = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'eintrittsdatum' field.
      * @return The value.
      */
    public java.time.LocalDate getEintrittsdatum() {
      return eintrittsdatum;
    }


    /**
      * Sets the value of the 'eintrittsdatum' field.
      * @param value The value of 'eintrittsdatum'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.TagesschuleAnmeldungEventDTO.Builder setEintrittsdatum(java.time.LocalDate value) {
      validate(fields()[6], value);
      this.eintrittsdatum = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'eintrittsdatum' field has been set.
      * @return True if the 'eintrittsdatum' field has been set, false otherwise.
      */
    public boolean hasEintrittsdatum() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'eintrittsdatum' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.TagesschuleAnmeldungEventDTO.Builder clearEintrittsdatum() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'planKlasse' field.
      * @return The value.
      */
    public java.lang.String getPlanKlasse() {
      return planKlasse;
    }


    /**
      * Sets the value of the 'planKlasse' field.
      * @param value The value of 'planKlasse'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.TagesschuleAnmeldungEventDTO.Builder setPlanKlasse(java.lang.String value) {
      validate(fields()[7], value);
      this.planKlasse = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'planKlasse' field has been set.
      * @return True if the 'planKlasse' field has been set, false otherwise.
      */
    public boolean hasPlanKlasse() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'planKlasse' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.TagesschuleAnmeldungEventDTO.Builder clearPlanKlasse() {
      planKlasse = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'abholung' field.
      * @return The value.
      */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.AbholungTagesschule getAbholung() {
      return abholung;
    }


    /**
      * Sets the value of the 'abholung' field.
      * @param value The value of 'abholung'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.TagesschuleAnmeldungEventDTO.Builder setAbholung(ch.dvbern.kibon.exchange.commons.tagesschulen.AbholungTagesschule value) {
      validate(fields()[8], value);
      this.abholung = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'abholung' field has been set.
      * @return True if the 'abholung' field has been set, false otherwise.
      */
    public boolean hasAbholung() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'abholung' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.TagesschuleAnmeldungEventDTO.Builder clearAbholung() {
      abholung = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'abweichungZweitesSemester' field.
      * @return The value.
      */
    public boolean getAbweichungZweitesSemester() {
      return abweichungZweitesSemester;
    }


    /**
      * Sets the value of the 'abweichungZweitesSemester' field.
      * @param value The value of 'abweichungZweitesSemester'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.TagesschuleAnmeldungEventDTO.Builder setAbweichungZweitesSemester(boolean value) {
      validate(fields()[9], value);
      this.abweichungZweitesSemester = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'abweichungZweitesSemester' field has been set.
      * @return True if the 'abweichungZweitesSemester' field has been set, false otherwise.
      */
    public boolean hasAbweichungZweitesSemester() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'abweichungZweitesSemester' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.TagesschuleAnmeldungEventDTO.Builder clearAbweichungZweitesSemester() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'bemerkung' field.
      * @return The value.
      */
    public java.lang.String getBemerkung() {
      return bemerkung;
    }


    /**
      * Sets the value of the 'bemerkung' field.
      * @param value The value of 'bemerkung'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.TagesschuleAnmeldungEventDTO.Builder setBemerkung(java.lang.String value) {
      validate(fields()[10], value);
      this.bemerkung = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'bemerkung' field has been set.
      * @return True if the 'bemerkung' field has been set, false otherwise.
      */
    public boolean hasBemerkung() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'bemerkung' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.TagesschuleAnmeldungEventDTO.Builder clearBemerkung() {
      bemerkung = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'kind' field.
      * @return The value.
      */
    public ch.dvbern.kibon.exchange.commons.verfuegung.KindDTO getKind() {
      return kind;
    }


    /**
      * Sets the value of the 'kind' field.
      * @param value The value of 'kind'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.TagesschuleAnmeldungEventDTO.Builder setKind(ch.dvbern.kibon.exchange.commons.verfuegung.KindDTO value) {
      validate(fields()[11], value);
      this.kindBuilder = null;
      this.kind = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'kind' field has been set.
      * @return True if the 'kind' field has been set, false otherwise.
      */
    public boolean hasKind() {
      return fieldSetFlags()[11];
    }

    /**
     * Gets the Builder instance for the 'kind' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public ch.dvbern.kibon.exchange.commons.verfuegung.KindDTO.Builder getKindBuilder() {
      if (kindBuilder == null) {
        if (hasKind()) {
          setKindBuilder(ch.dvbern.kibon.exchange.commons.verfuegung.KindDTO.newBuilder(kind));
        } else {
          setKindBuilder(ch.dvbern.kibon.exchange.commons.verfuegung.KindDTO.newBuilder());
        }
      }
      return kindBuilder;
    }

    /**
     * Sets the Builder instance for the 'kind' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.TagesschuleAnmeldungEventDTO.Builder setKindBuilder(ch.dvbern.kibon.exchange.commons.verfuegung.KindDTO.Builder value) {
      clearKind();
      kindBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'kind' field has an active Builder instance
     * @return True if the 'kind' field has an active Builder instance
     */
    public boolean hasKindBuilder() {
      return kindBuilder != null;
    }

    /**
      * Clears the value of the 'kind' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.TagesschuleAnmeldungEventDTO.Builder clearKind() {
      kind = null;
      kindBuilder = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public TagesschuleAnmeldungEventDTO build() {
      try {
        TagesschuleAnmeldungEventDTO record = new TagesschuleAnmeldungEventDTO();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.String) defaultValue(fields()[0]);
        record.institutionId = fieldSetFlags()[1] ? this.institutionId : (java.lang.String) defaultValue(fields()[1]);
        record.refnr = fieldSetFlags()[2] ? this.refnr : (java.lang.String) defaultValue(fields()[2]);
        record.version = fieldSetFlags()[3] ? this.version : (java.lang.Integer) defaultValue(fields()[3]);
        record.freigegebenAm = fieldSetFlags()[4] ? this.freigegebenAm : (java.time.LocalDate) defaultValue(fields()[4]);
        if (gesuchsperiodeBuilder != null) {
          try {
            record.gesuchsperiode = this.gesuchsperiodeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("gesuchsperiode"));
            throw e;
          }
        } else {
          record.gesuchsperiode = fieldSetFlags()[5] ? this.gesuchsperiode : (ch.dvbern.kibon.exchange.commons.types.Gesuchsperiode) defaultValue(fields()[5]);
        }
        record.eintrittsdatum = fieldSetFlags()[6] ? this.eintrittsdatum : (java.time.LocalDate) defaultValue(fields()[6]);
        record.planKlasse = fieldSetFlags()[7] ? this.planKlasse : (java.lang.String) defaultValue(fields()[7]);
        record.abholung = fieldSetFlags()[8] ? this.abholung : (ch.dvbern.kibon.exchange.commons.tagesschulen.AbholungTagesschule) defaultValue(fields()[8]);
        record.abweichungZweitesSemester = fieldSetFlags()[9] ? this.abweichungZweitesSemester : (java.lang.Boolean) defaultValue(fields()[9]);
        record.bemerkung = fieldSetFlags()[10] ? this.bemerkung : (java.lang.String) defaultValue(fields()[10]);
        if (kindBuilder != null) {
          try {
            record.kind = this.kindBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("kind"));
            throw e;
          }
        } else {
          record.kind = fieldSetFlags()[11] ? this.kind : (ch.dvbern.kibon.exchange.commons.verfuegung.KindDTO) defaultValue(fields()[11]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<TagesschuleAnmeldungEventDTO>
    WRITER$ = (org.apache.avro.io.DatumWriter<TagesschuleAnmeldungEventDTO>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<TagesschuleAnmeldungEventDTO>
    READER$ = (org.apache.avro.io.DatumReader<TagesschuleAnmeldungEventDTO>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










