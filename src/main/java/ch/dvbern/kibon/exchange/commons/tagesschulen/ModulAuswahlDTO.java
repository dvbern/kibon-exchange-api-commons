/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package ch.dvbern.kibon.exchange.commons.tagesschulen;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class ModulAuswahlDTO extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -3691594891645313143L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ModulAuswahlDTO\",\"namespace\":\"ch.dvbern.kibon.exchange.commons.tagesschulen\",\"fields\":[{\"name\":\"modulId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"weekday\",\"type\":\"int\"},{\"name\":\"intervall\",\"type\":{\"type\":\"enum\",\"name\":\"Intervall\",\"namespace\":\"ch.dvbern.kibon.exchange.commons.types\",\"symbols\":[\"WOECHENTLICH\",\"ALLE_ZWEI_WOCHEN\"]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ModulAuswahlDTO> ENCODER =
      new BinaryMessageEncoder<ModulAuswahlDTO>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ModulAuswahlDTO> DECODER =
      new BinaryMessageDecoder<ModulAuswahlDTO>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ModulAuswahlDTO> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ModulAuswahlDTO> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ModulAuswahlDTO> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ModulAuswahlDTO>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ModulAuswahlDTO to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ModulAuswahlDTO from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ModulAuswahlDTO instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ModulAuswahlDTO fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.String modulId;
   private int weekday;
   private ch.dvbern.kibon.exchange.commons.types.Intervall intervall;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ModulAuswahlDTO() {}

  /**
   * All-args constructor.
   * @param modulId The new value for modulId
   * @param weekday The new value for weekday
   * @param intervall The new value for intervall
   */
  public ModulAuswahlDTO(java.lang.String modulId, java.lang.Integer weekday, ch.dvbern.kibon.exchange.commons.types.Intervall intervall) {
    this.modulId = modulId;
    this.weekday = weekday;
    this.intervall = intervall;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return modulId;
    case 1: return weekday;
    case 2: return intervall;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: modulId = value$ != null ? value$.toString() : null; break;
    case 1: weekday = (java.lang.Integer)value$; break;
    case 2: intervall = (ch.dvbern.kibon.exchange.commons.types.Intervall)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'modulId' field.
   * @return The value of the 'modulId' field.
   */
  public java.lang.String getModulId() {
    return modulId;
  }


  /**
   * Sets the value of the 'modulId' field.
   * @param value the value to set.
   */
  public void setModulId(java.lang.String value) {
    this.modulId = value;
  }

  /**
   * Gets the value of the 'weekday' field.
   * @return The value of the 'weekday' field.
   */
  public int getWeekday() {
    return weekday;
  }


  /**
   * Sets the value of the 'weekday' field.
   * @param value the value to set.
   */
  public void setWeekday(int value) {
    this.weekday = value;
  }

  /**
   * Gets the value of the 'intervall' field.
   * @return The value of the 'intervall' field.
   */
  public ch.dvbern.kibon.exchange.commons.types.Intervall getIntervall() {
    return intervall;
  }


  /**
   * Sets the value of the 'intervall' field.
   * @param value the value to set.
   */
  public void setIntervall(ch.dvbern.kibon.exchange.commons.types.Intervall value) {
    this.intervall = value;
  }

  /**
   * Creates a new ModulAuswahlDTO RecordBuilder.
   * @return A new ModulAuswahlDTO RecordBuilder
   */
  public static ch.dvbern.kibon.exchange.commons.tagesschulen.ModulAuswahlDTO.Builder newBuilder() {
    return new ch.dvbern.kibon.exchange.commons.tagesschulen.ModulAuswahlDTO.Builder();
  }

  /**
   * Creates a new ModulAuswahlDTO RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ModulAuswahlDTO RecordBuilder
   */
  public static ch.dvbern.kibon.exchange.commons.tagesschulen.ModulAuswahlDTO.Builder newBuilder(ch.dvbern.kibon.exchange.commons.tagesschulen.ModulAuswahlDTO.Builder other) {
    if (other == null) {
      return new ch.dvbern.kibon.exchange.commons.tagesschulen.ModulAuswahlDTO.Builder();
    } else {
      return new ch.dvbern.kibon.exchange.commons.tagesschulen.ModulAuswahlDTO.Builder(other);
    }
  }

  /**
   * Creates a new ModulAuswahlDTO RecordBuilder by copying an existing ModulAuswahlDTO instance.
   * @param other The existing instance to copy.
   * @return A new ModulAuswahlDTO RecordBuilder
   */
  public static ch.dvbern.kibon.exchange.commons.tagesschulen.ModulAuswahlDTO.Builder newBuilder(ch.dvbern.kibon.exchange.commons.tagesschulen.ModulAuswahlDTO other) {
    if (other == null) {
      return new ch.dvbern.kibon.exchange.commons.tagesschulen.ModulAuswahlDTO.Builder();
    } else {
      return new ch.dvbern.kibon.exchange.commons.tagesschulen.ModulAuswahlDTO.Builder(other);
    }
  }

  /**
   * RecordBuilder for ModulAuswahlDTO instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ModulAuswahlDTO>
    implements org.apache.avro.data.RecordBuilder<ModulAuswahlDTO> {

    private java.lang.String modulId;
    private int weekday;
    private ch.dvbern.kibon.exchange.commons.types.Intervall intervall;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(ch.dvbern.kibon.exchange.commons.tagesschulen.ModulAuswahlDTO.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.modulId)) {
        this.modulId = data().deepCopy(fields()[0].schema(), other.modulId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.weekday)) {
        this.weekday = data().deepCopy(fields()[1].schema(), other.weekday);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.intervall)) {
        this.intervall = data().deepCopy(fields()[2].schema(), other.intervall);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
    }

    /**
     * Creates a Builder by copying an existing ModulAuswahlDTO instance
     * @param other The existing instance to copy.
     */
    private Builder(ch.dvbern.kibon.exchange.commons.tagesschulen.ModulAuswahlDTO other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.modulId)) {
        this.modulId = data().deepCopy(fields()[0].schema(), other.modulId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.weekday)) {
        this.weekday = data().deepCopy(fields()[1].schema(), other.weekday);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.intervall)) {
        this.intervall = data().deepCopy(fields()[2].schema(), other.intervall);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'modulId' field.
      * @return The value.
      */
    public java.lang.String getModulId() {
      return modulId;
    }


    /**
      * Sets the value of the 'modulId' field.
      * @param value The value of 'modulId'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.ModulAuswahlDTO.Builder setModulId(java.lang.String value) {
      validate(fields()[0], value);
      this.modulId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'modulId' field has been set.
      * @return True if the 'modulId' field has been set, false otherwise.
      */
    public boolean hasModulId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'modulId' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.ModulAuswahlDTO.Builder clearModulId() {
      modulId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'weekday' field.
      * @return The value.
      */
    public int getWeekday() {
      return weekday;
    }


    /**
      * Sets the value of the 'weekday' field.
      * @param value The value of 'weekday'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.ModulAuswahlDTO.Builder setWeekday(int value) {
      validate(fields()[1], value);
      this.weekday = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'weekday' field has been set.
      * @return True if the 'weekday' field has been set, false otherwise.
      */
    public boolean hasWeekday() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'weekday' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.ModulAuswahlDTO.Builder clearWeekday() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'intervall' field.
      * @return The value.
      */
    public ch.dvbern.kibon.exchange.commons.types.Intervall getIntervall() {
      return intervall;
    }


    /**
      * Sets the value of the 'intervall' field.
      * @param value The value of 'intervall'.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.ModulAuswahlDTO.Builder setIntervall(ch.dvbern.kibon.exchange.commons.types.Intervall value) {
      validate(fields()[2], value);
      this.intervall = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'intervall' field has been set.
      * @return True if the 'intervall' field has been set, false otherwise.
      */
    public boolean hasIntervall() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'intervall' field.
      * @return This builder.
      */
    public ch.dvbern.kibon.exchange.commons.tagesschulen.ModulAuswahlDTO.Builder clearIntervall() {
      intervall = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ModulAuswahlDTO build() {
      try {
        ModulAuswahlDTO record = new ModulAuswahlDTO();
        record.modulId = fieldSetFlags()[0] ? this.modulId : (java.lang.String) defaultValue(fields()[0]);
        record.weekday = fieldSetFlags()[1] ? this.weekday : (java.lang.Integer) defaultValue(fields()[1]);
        record.intervall = fieldSetFlags()[2] ? this.intervall : (ch.dvbern.kibon.exchange.commons.types.Intervall) defaultValue(fields()[2]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ModulAuswahlDTO>
    WRITER$ = (org.apache.avro.io.DatumWriter<ModulAuswahlDTO>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ModulAuswahlDTO>
    READER$ = (org.apache.avro.io.DatumReader<ModulAuswahlDTO>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.modulId);

    out.writeInt(this.weekday);

    out.writeEnum(this.intervall.ordinal());

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.modulId = in.readString();

      this.weekday = in.readInt();

      this.intervall = ch.dvbern.kibon.exchange.commons.types.Intervall.values()[in.readEnum()];

    } else {
      for (int i = 0; i < 3; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.modulId = in.readString();
          break;

        case 1:
          this.weekday = in.readInt();
          break;

        case 2:
          this.intervall = ch.dvbern.kibon.exchange.commons.types.Intervall.values()[in.readEnum()];
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










